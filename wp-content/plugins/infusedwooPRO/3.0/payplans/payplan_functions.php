<?php  function iw_admin_get_conditions(){$conditions=iwar_get_available_conditions('IW_Checkout_Trigger');echo json_encode($conditions);exit();}function iw_admin_save_payplan(){global $wpdb;$data=$_POST;unset($data['conditions']);$conditions=isset($_POST['conditions'])?$_POST['conditions']:array();foreach($conditions as $k =>$group){foreach($group['content']as $i =>$cond){unset($conditions[$k]['content'][$i]['form_html']);}}$cond_num=0;foreach($conditions as $k){foreach($k['content']as $c){$cond_num++;$cond_class=$c['condition'];if(!class_exists($cond_class)){$errors[]="Condition # $cond_num is not valid anymore. Please remove condition or refresh the page to load available conditions.";continue;}$cond=new $cond_class;$config=isset($c['config'])?$c['config']:array();$validate_cond=$cond->validate_entry($config);if(!empty($validate_cond)){$errors[]="Condition # $cond_num: ".$validate_cond;}}}if(isset($errors)&&count($errors)>0){echo json_encode(array('errors' =>$errors));exit();}if(!isset($_POST['id'])){$wpdb->insert($wpdb->prefix."iw_payplans",array('data' =>serialize(iw_stripslashes($data)),'enabled' =>$data['status']=='enabled'?1:0,'conditions' =>serialize(iw_stripslashes($conditions)),'ord' =>0,'created' =>date('Y-m-d H:i:s'),'updated' =>date('Y-m-d H:i:s')));echo json_encode(array('id' =>$wpdb->insert_id));}else{$wpdb->update($wpdb->prefix."iw_payplans",array('data' =>serialize(iw_stripslashes($data)),'enabled' =>$data['status']=='enabled'?1:0,'conditions' =>serialize(iw_stripslashes($conditions)),'updated' =>date('Y-m-d H:i:s')),array('id' =>$_POST['id']),array('%s','%d','%s','%s'),array('%d'));echo json_encode(array('id' =>$_POST['id']));}exit();}function iw_admin_get_payplans($raw=false,$enabled_only=false,$with_cond=false){global $wpdb;$to_select="id, data, enabled";$where="";if($with_cond)$to_select .=", conditions";if($enabled_only)$where .="WHERE enabled = 1";$res=$wpdb->get_results("
		SELECT $to_select 
		FROM {$wpdb->prefix}iw_payplans $where
		ORDER BY ord ASC, created DESC
		");$payplans=array();foreach($res as $k =>$p){$payplan=unserialize($p->data);$payplan['id']=$p->id;$payplan['status']=$p->enabled?'enabled':'disabled';if($with_cond)$payplan['conditions']=unserialize($p->conditions);$payplans[]=$payplan;}if($raw)return $payplans;echo json_encode(array('success' =>true,'payplans' =>$payplans));exit();}function iw_get_payplan($id){global $wpdb;$p=$wpdb->get_row($wpdb->prepare("
		SELECT * 
		FROM {$wpdb->prefix}iw_payplans
		WHERE id=%d
		",array($id)));$payplan=unserialize($p->data);$payplan['status']=$p->enabled?'enabled':'disabled';$payplan['id']=$p->id;if($p->conditions){$conditions=unserialize($p->conditions);foreach($conditions as $k =>$group){foreach($group['content']as $i =>$cond){$this_cond=new $cond['condition'];$config=isset($cond['config'])?$cond['config']:array();$this_cond->display_html($config,$existing_recipe?$settings['trigger']:'');$conditions[$k]['content'][$i]['form_html']=$this_cond->display_html($config,'');}}$payplan['conditions']=$conditions;}else{$payplan['conditions']=array();}return $payplan;}function iw_admin_get_payplan(){$payplan=iw_get_payplan($_GET['id']);echo json_encode($payplan);exit();}function iw_admin_delete_payplan(){global $wpdb;$wpdb->delete("{$wpdb->prefix}iw_payplans",array('id' =>$_GET['id']),array('%d'));echo json_encode(array('success' =>true));exit();}function iw_admin_enable_payplan(){global $wpdb;$wpdb->update($wpdb->prefix."iw_payplans",array('enabled' =>1,),array('id' =>$_GET['id']),array('%d'),array('%d'));echo json_encode(array('success' =>true));exit();}function iw_admin_disable_payplan(){global $wpdb;$wpdb->update($wpdb->prefix."iw_payplans",array('enabled' =>0,),array('id' =>$_GET['id']),array('%d'),array('%d'));echo json_encode(array('success' =>true));exit();}function iw_admin_clone_payplan(){global $wpdb;$p=$wpdb->get_row($wpdb->prepare("
		SELECT * 
		FROM {$wpdb->prefix}iw_payplans
		WHERE id=%d
		",array($_GET['id'])));$p->data=unserialize($p->data);$p->data['name']='Copy of '.$p->data['name'];$p->data=serialize($p->data);$wpdb->insert($wpdb->prefix."iw_payplans",array('data' =>$p->data,'enabled' =>0,'conditions' =>$p->conditions,'ord' =>0,'created' =>date('Y-m-d H:i:s'),'updated' =>date('Y-m-d H:i:s')));echo json_encode(array('success' =>true));exit();}function iw_admin_reorder_payplans(){global $wpdb;foreach($_GET['order']as $k =>$v){$wpdb->update($wpdb->prefix."iw_payplans",array('ord' =>$v,),array('id' =>$k),array('%d'),array('%d'));}echo json_encode(array('success' =>true));exit();}function iw_stripslashes($value){$value=is_array($value)?array_map('stripslashes_deep',$value):stripslashes($value);return $value;}function iw_checkout_show_payplans(){ ?> <style type="text/css"> .iw-payplans ul li {  list-style: none!important;  vertical-align: top; } .iw-payplans ul li input {  display: inline-block;  vertical-align: top;  margin-top: 4px; } .iw-payplans ul li label {  position: relative;  display: inline-block;  width: 90%; } .iw-payplans ul li p {  margin-left: 25px;  font-size: 11pt;  display: none; } ul {  padding-left: 0;  margin-left: 10px; } </style>	<?php  iw_checkout_show_payplans_fragment(); ?> <script> jQuery('body').on('click','[name=iw-payplan]', function() {  if(jQuery(this).is(':checked')) {  jQuery('.iw-payplan p').hide();  jQuery(this).parent().children('p').show();  }  jQuery( 'body' ).trigger( 'update_checkout' ); }); </script>	<?php }function iw_checkout_show_payplans_fragment(){global $iwpro;$payplans=iw_admin_get_payplans(true,true,true);$gateways=WC()->payment_gateways->get_available_payment_gateways();if($iwpro->has_sub()||count($payplans)==0||!in_array('infusionsoft_cc',array_keys($gateways)))return false;$payplans_filtered=array();foreach($payplans as $k =>$payplan){$trigger=new IW_Checkout_Trigger;$show=true;if(is_array($payplan['conditions']))foreach($payplan['conditions']as $grp){$grp_logic=false;foreach($grp['content']as $cond){if(class_exists($cond['condition'])){$test_condition=new $cond['condition'];$conf=isset($cond['config'])?$cond['config']:array();if($test_condition->test($conf,$trigger)){$grp_logic=true;break;}}}if(!$grp_logic){$show=false;break;}}if($show)$payplans_filtered[]=$payplan;}if(count($payplans_filtered)==0)return false;$cart=WC()->cart;$total=$cart->get_total('raw');echo '<div class="iw-payplans">';echo '<h3>'.__('Payplan Options','woocommerce').'</h3>';echo '<ul>'; ?> <li> <input type="radio" name="iw-payplan" checked value="0"> <label>One-time Payment of <b><?php echo wc_price($total); ?></b></label> </li>	<?php  foreach($payplans_filtered as $payplan){$calculate=iw_calculate_payplan((array) $payplan,$total);$title=$calculate['display'];$title=apply_filters('iw_payplan_title',$title,$payplan,$calculate);$desc=apply_filters('iw_payplan_desc',$calculate['calculation'],$payplan,$calculate); ?> <li class="iw-payplan"> <input type="radio" name="iw-payplan" value="<?php echo $payplan['id'] ?>"> <label><?php echo $title; ?></label> <p><?php echo $desc; ?></p> </li> <?php }echo '</ul>';echo '</div>';}function iw_checkout_add_fragment($fragments){ob_start();iw_checkout_show_payplans_fragment();$payplan_select_html=ob_get_clean();$fragments['.iw-payplans']=$payplan_select_html;return $fragments;}function iw_payplan_limit_pg($value){if(isset($_POST['post_data'])){$post_data=array();parse_str($_POST['post_data'],$post_data);if(isset($post_data['iw-payplan'])&&$post_data['iw-payplan']>0){$newpg=array();foreach($value as $k =>$pg){if($k =='infusionsoft_cc'){$newpg[$k]=$pg;break;}}return $newpg;}else{return $value;}}else{return $value;}}function iw_payplans_db_install($iw_payplan_db_version){global $wpdb;$table_name=$wpdb->prefix."iw_payplans";$sql="CREATE TABLE $table_name (
	  id mediumint(9) NOT NULL AUTO_INCREMENT,
	  data LONGTEXT,
	  enabled int(1),
	  conditions LONGTEXT,
	  ord mediumint(9),
	  updated datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
	  created datetime DEFAULT '0000-00-00 00:00:00' NOT NULL,
	  PRIMARY KEY id (id)
	);";require_once(ABSPATH.'wp-admin/includes/upgrade.php');dbDelta($sql);update_option("iw_payplan_db_version",$iw_payplan_db_version);}function iw_calculate_payplan($payplan,$total=false){$display='';$calculation='';$today_total=0;$financecharge=0;$signupfee=0;if(isset($payplan['signupfee'])&&$payplan['signupfee']){if(strpos($payplan['signupfee'],'%')!==false){$signupfee=(float) str_replace('%','',$payplan['signupfee'])*$total/100;}else{$signupfee=$payplan['signupfee'];}}if($total !==false &&isset($payplan['financecharge'])){if(strpos($payplan['financecharge'],'%')!==false){$financecharge=(float) str_replace('%','',$payplan['financecharge'])*$total/100;}else{$financecharge=$payplan['financecharge'];}$total +=$financecharge;}if(isset($payplan['numpayments'])&&$payplan['numpayments']){$display=$payplan['numpayments']==1?'One-time Payment':$payplan['numpayments'].' Payments';}$recurring_amount=0;if(!$total)$display .=' of [recurring_amount]';else{$recurring_amount=(float) $total/(int) $payplan['numpayments'];$display .=' of <b>'.wc_price($recurring_amount).'</b>';}if($signupfee){$display='Sign up fee of <b>'.wc_price($signupfee).'</b> and '.$display;}if(isset($payplan['trialdays'])&&$payplan['trialdays']>0){$display .=' after '.$payplan['trialdays'].' days';$next_payments=$payplan['numpayments'];if(!$signupfee){$display='Free Trial and '.$display;$today_total=0;$calculation='Free '.$payplan['trialdays'].'-day trial';}else{$today_total=$signupfee;$calculation='Pay only <b>'.wc_price($today_total).'</b> today';}$recurring_start=strtotime('+'.$payplan['trialdays'].' days');}else{$next_payments=$payplan['numpayments']-1;$today_total=isset($signupfee)?$signupfee+$recurring_amount:$recurring_amount;$recurring_start=strtotime('+'.$payplan['daysbetweenpayments'].' days');$calculation='Pay only <b>'.wc_price($today_total).'</b> today';}if(isset($payplan['daysbetweenpayments'])){$next_pay=$recurring_start;$pay_dates=array();for($i=0;$i<$next_payments;$i++){$pay_dates[]=date('Y',$next_pay)==date('Y')?date('M j',$next_pay):date('M j, Y',$next_pay);$next_pay=$next_pay+$payplan['daysbetweenpayments']*24*3600;}$pay_str=$next_payments>1?'Payments':'Payment';$calculation .=' then '.$next_payments." $pay_str of <b>".wc_price($recurring_amount).'</b> on '.iw_natural_language_join($pay_dates);}if(isset($payplan['display_custom'])&&$payplan['display_custom']){$display=str_replace('[recurring_amount]',wc_price($recurring_amount),$payplan['display_custom']);}return array_merge($payplan,array('display' =>$display,'calculation' =>$calculation,'total' =>$total,'num_cycle_next' =>$next_payments,'recurring_start' =>$recurring_start,'today_total' =>round($today_total,2),'recurring_amount' =>wc_price($recurring_amount),'financecharge' =>$financecharge));}function iw_natural_language_join(array $list,$conjunction='and'){$last=array_pop($list);if($list){return implode(', ',$list).' '.$conjunction.' '.$last;}return $last;}function iw_simulate_payplan(){$calculate=iw_calculate_payplan($_POST,isset($_POST['total'])?$_POST['total']:0);echo json_encode($calculate);exit();}function iw_show_payplan_info_order($order){$payplan_info=get_post_meta($order->get_id(),'iw-payplan-note',true);if(!empty($payplan_info)){ ?> <p> <h2 class="woocommerce-column__title">Payplan</h2> <?php echo $payplan_info; ?><br> </p>	<?php }}