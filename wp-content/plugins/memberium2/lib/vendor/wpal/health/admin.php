<?php
/**
* Copyright (c) 2020 David J Bullock
* Web Power and Light, LLC
* https://webpowerandlight.com
* support@webpowerandlight.com
*
*/

 if (! defined('ABSPATH') ) { header('Location: /'); die(); } final class wplfxouzt { function __construct() { include_once(__DIR__ . '/healthcheck.php'); $this->wplicnz(); } private function wplicnz() { add_action('admin_notices', array('wpls4jehm', 'wplt8m39z') ); add_filter('site_status_tests', array($this, 'wplos2vh8'), 1); } function wplos2vh8($vwplh9dnec) { $vwplh9dnec['direct']['wpal/memberium/memory'] = array( 'label' => 'Memory Allocation', 'test' => array(__CLASS__, 'wployrx8'), ); $vwplh9dnec['direct']['wpal/memberium/caching'] = array( 'label' => 'Caching Plugins', 'test' => array(__CLASS__, 'wplk6phyf'), ); $vwplh9dnec['direct']['wpal/memberium/cloudflare'] = array( 'label' => 'Cloudflare', 'test' => array(__CLASS__, 'wplnytbs'), ); $vwplh9dnec['direct']['wpal/memberium/licenseserver'] = array( 'label' => 'Memberium License Seserver', 'test' => array(__CLASS__, 'wpla5l9hf'), ); return $vwplh9dnec; } static function wplk6phyf() { $vwplyio4f = array( 'label' => 'No Page Caching Plugins Found', 'status' => 'good', 'badge' => array( 'label' => __( 'Security' ), 'color' => 'green', ), 'description' => '', 'actions' => '', 'test' => 'wpal_healthcheck_caching', ); if (function_exists('wpsc_init')) { $vwplyio4f['label'] = 'Page Caching Plugins Found'; $vwplyio4f['status'] = 'critical'; $vwplyio4f['badge']['color'] = 'red'; $vwplyio4f['description'] .= '<p>WP Super Cache is installed and active.</p>'; } if (defined('W3TC')) { $vwplyio4f['label'] = 'Page Caching Plugins Found'; $vwplyio4f['status'] = 'critical'; $vwplyio4f['badge']['color'] = 'red'; $vwplyio4f['description'] .= '<p>W3 Total Cache is installed and active.</p>p>'; } if (defined('WP_ROCKET_VERSION') ) { $vwplyio4f['label'] = 'Page Caching Plugins Found'; $vwplyio4f['status'] = 'critical'; $vwplyio4f['badge']['color'] = 'red'; $vwplyio4f['description'] .= '<p>WP Rocket is installed and active.</p>'; } if (empty($vwplyio4f['description'])) { $vwplyio4f['description'] = '<p>No caching plugin conflicts detected.<br />Installing Caching plugins can cause data corruption and security issues.</p>'; } else { $vwplyio4f['description'] .= '<p>Running caching plugins with your membership site can cause corruption and security problems.  To fix this problem, disable your caching plugins.</p>'; } return $vwplyio4f; } static function wployrx8() { $vwplyio4f = array( 'label' => 'Sufficient Memory Allocated', 'status' => 'good', 'badge' => array( 'label' => __( 'Performance' ), 'color' => 'green', ), 'description' => '', 'actions' => '', 'test' => 'wpal_healthcheck_memory', ); $vwplavtes = wp_convert_hr_to_bytes(WP_MEMORY_LIMIT); if ($vwplavtes <= 41943040) { $vwploxfb = WP_MEMORY_LIMIT; $vwplygr2 = "<p>Your site is configured with a memory limit of {$vwploxfb}<br />" . 'You can increase your WordPress memory limit by adding or updating the following line in your wp-config.php:<br />' . "<code>define('WP_MEMORY_LIMIT', '64M');</code><br />" . 'For sites with many or complex plugins or themes, you may want to set it to 96M, 128M, 160M or more.</p>'; $vwplyio4f['label'] = 'Insufficient memory allocated'; $vwplyio4f['status'] = 'recommended'; $vwplyio4f['badge']['color'] = 'orange'; $vwplyio4f['description'] = $vwplygr2; } else { $vwplyio4f['status'] = 'good'; $vwplyio4f['description'] = '<p>Foo</p>'; } return $vwplyio4f; } static function wplnytbs() { $vwplyio4f = array( 'label' => 'No Proxies detected', 'status' => 'good', 'badge' => array('label' => __( 'Performance' ), 'color' => 'green'), 'description' => 'No web proxies were detected.  Web Proxies like Cloudflare and Securi are services to secure and speed up your website, however they may interfere with HTTP POSTs coming from Infusionsoft/Keap.', 'actions' => '', 'test' => 'wpal_healthcheck_cloudflare', ); if (! empty($_SERVER['HTTP_CF_RAY']) ) { $vwplygr2 = '<p>Memberium has detected that you are using CloudFlare.  We recommend reviewing your CloudFlare configuration to ensure that page caching is disabled.</p>'; $vwplyio4f['label'] = 'CloudFlare Detected'; $vwplyio4f['status'] = 'recommended'; $vwplyio4f['badge']['color'] = 'orange'; $vwplyio4f['description'] = $vwplygr2; } return $vwplyio4f; } static function wpla5l9hf() {  $vwplyio4f = array( 'label' => 'Can Communicate with Memberium License Server', 'status' => 'good', 'badge' => array('label' => __( 'Memberium' ), 'color' => 'green'), 'description' => 'Your connection to the license server appears to be working properly.', 'actions' => '', 'test' => 'wpal_healthcheck_hostblocking', ); if (defined('WP_HTTP_BLOCK_EXTERNAL') && constant('WP_HTTP_BLOCK_EXTERNAL') == 1) { $vwplzic3b = defined('WP_ACCESSIBLE_HOSTS') ? strtolower(constant('WP_ACCESSIBLE_HOSTS') ) : ''; $vwplmfxc0w = array_filter(explode(',', $vwplzic3b) ); $vwplmfxc0w = array_filter($vwplmfxc0w); $vwplw5rgd3 = wplz8bid::wplm3z9k('appname'); $vwplbzp2 = array( 'licenseserver.webpowerandlight.com', "{$vwplw5rgd3}.infusionsoft.com" ); foreach($vwplbzp2 as $k => $vwplcjpa) { if (in_array($vwplcjpa, $vwplmfxc0w) ) { unset($vwplbzp2[$k]); } } if (! empty($vwplbzp2) ) { $vwplr7zec = trim($vwplzic3b . "," . implode(',', $vwplbzp2), ','); $vwpl_7gr2b = 'notice notice-error'; $vwplygr2 = '<h3>External Hosts Blocked</h3>' . '<p>Memberium has detected that you are blocking access to external hosts, through your wp-config.php file.' . 'You will either need to remove the <strong>WP_HTTP_BLOCK_EXTERNAL</strong> setting, or add our hosts to the <strong>WP_ACCESSIBLE_HOSTS</strong> setting.' . 'Leaving this problem unaddressed will cause your plugin to stop working.</p>' . "<p style='font-family:\"courier new\",monospace;font-size:120%;'>define('WP_ACCESSIBLE_HOSTS', '" . $vwplr7zec . "');</p>" . '<p>If you would like assistance, please contact <a target="_blank" href="https://memberium.com/support/">Memberium Support.</a></p>'; $vwplyio4f['label'] = 'Memberium License Server is blocked'; $vwplyio4f['status'] = 'critical'; $vwplyio4f['badge']['color'] = 'red'; $vwplyio4f['description'] = $vwplygr2; } } return $vwplyio4f; }   }
