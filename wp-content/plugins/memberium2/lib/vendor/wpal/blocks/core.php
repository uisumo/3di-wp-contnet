<?php
/**
 * Copyright (c) 2020 David J Bullock
 * Web Power and Light
*/

 if (! defined( 'ABSPATH' ) ) { die(); }  function wplxnbwa($args){ return wplxnbwa::wplwsvahj($args); }  class wplxnbwa {  protected $disabled = array();  private function __construct() {}  static function wplwsvahj($args) { static $instance = null; if ( is_null( $instance ) ) { $instance = new self; $instance->wplrehu1($args); $instance->wplp0dvr(); } return $instance; }  function wplrehu1($args){ $defaults = array( 'debug' => 0, 'debuglog' => 'error_log:', 'prefix' => 'wpal', 'settings_title' => 'Block Access', 'access_level_name' => 'Access Level', 'key_name' => 'Key(s)', 'keys_removed_text' => 'Notice : The following ID(s) have been removed', 'disabled_settings' => array(), ); $args = wp_parse_args( $args, $defaults );  $this->wplp5qn($args['disabled_settings']); unset($args['disabled_settings']);  foreach ($args as $name => $value) { if ( array_key_exists($name, $defaults) ){ $var = 'WPAL_BLOCKS_' . strtoupper($name); if ( !defined($var) ){ define($var,$value); } } }  if (WPAL_BLOCKS_DEBUG){ require_once __DIR__ . '/debuglog.php'; } }  function wplp0dvr() { if ( WPAL_BLOCKS_DEBUG ) wplfle_d::log( __FILE__, __FUNCTION__, __LINE__, 'Entering' ); add_action('plugins_loaded', array( $this, 'wpld72br' ), 1 ); add_action('plugins_loaded', array( $this, 'wplzs6j' ), 9999 ); add_action('et_builder_modules_loaded', array( $this, 'wplyu7r5q' ), 9999 ); add_action('enqueue_block_assets', array( $this, 'wplyfc7' ), 9999 ); }  function wpld72br() { load_plugin_textdomain( 'wpal_blocks', false, __DIR__ . '/languages' ); }  function wplzs6j(){ $beaver_builder = class_exists('FLBuilder'); $elementor = defined('ELEMENTOR_VERSION'); if ( $elementor || $beaver_builder ) { $elementor_editor = ( $elementor && isset($_GET['action']) && $_GET['action'] === 'elementor' ) ? true : false; $beaver_builder_editor = ( $beaver_builder && isset($_GET['fl_builder']) ) ? true : false; $editor = ( $elementor_editor || $beaver_builder_editor ) ? true : false; if ( $editor ){ $this->wplyu7r5q(); } else { if ( !is_admin() ){ $this->wplyu7r5q(); } } } }  function wplyfc7() {  $elementor = defined('ELEMENTOR_VERSION'); $beaver_builder = class_exists('FLBuilder'); $divi = ( defined( 'ET_BUILDER_PLUGIN_VERSION' ) || defined( 'ET_CORE_VERSION' ) ) ? true : false;  $divi_front_edit = ( $divi && isset($_GET['et_fb']) ) ? true : false; $beaver_front_edit = ( $beaver_builder && isset($_GET['fl_builder']) ) ? true : false; $elementor_editor = ( $elementor && isset($_GET['action']) && $_GET['action'] === 'elementor' ) ? true : false; $admin_check = ( is_admin() || $divi_front_edit || $beaver_front_edit || $elementor_editor ) ? true : false;  if ( $admin_check ){  if ( is_admin() ){ if ( !defined('WPAL_BLOCKS_GUTENBERG') ){ define('WPAL_BLOCKS_GUTENBERG', 'editor' ); $this->wplyu7r5q(); } } }  else{ if ( !defined('WPAL_BLOCKS_GUTENBERG') ){  global $post; $post_id = ( isset($post->ID) ) ? $post->ID : false; $current_builder = 'gutenberg';  if ( (int)$post_id > 0 ){  $elementor_page = ( $elementor ) ? get_post_meta( $post_id, '_elementor_edit_mode', true ) : false; $is_elementor = ( $elementor_page ) ? true : false;  $beaver_page = ( $beaver_builder ) ? get_post_meta( $post_id, '_fl_builder_enabled', true ) : false; $is_beaver = ( $beaver_page ) ? true : false;  $divi_page = ( $divi ) ? get_post_meta( $post_id, '_et_pb_use_builder', true ) : false; $is_divi = ( $divi_page === 'on' ) ? true : false;  if ( $is_elementor ){ $current_builder = 'elementor'; } else if ( $is_beaver ){ $current_builder = 'beaver_builder'; } else if ( $is_divi ){ $current_builder = 'divi'; } }  if ( $current_builder === 'gutenberg' ){ define('WPAL_BLOCKS_GUTENBERG', 'front' ); $this->wplyu7r5q(); } } } }  function wplyu7r5q() { $block_file = trailingslashit(__DIR__); $admin_check = ( is_admin() || isset($_GET['et_fb']) || (isset($_GET['fl_builder']) ) ) ? true : false; $block_file .= ( $admin_check ) ? 'admin.php' : 'frontend.php'; if ( file_exists( $block_file ) ) { include_once $block_file; if ( $admin_check ){ wplbd78()->init($this->disabled); } else { wploxfckj()->init(); } } }  function wplp5qn( $disabled_settings ){ $return = array(); $disabled_settings = ( is_array($disabled_settings) ) ? $disabled_settings : array(); if ( !empty($disabled_settings) ){ $settings = array( 'any_membership' => 1, 'memberships' => 1, 'contact_ids' => 1, 'tags1' => 1, 'tags2' => 1, 'logged_in_only' => 1, 'logged_out_only' => 1, 'asset_id' => 1, 'eval' => 1, 'invert_results' => 1, ); foreach ($disabled_settings as $name => $value) { if ( array_key_exists($name, $settings) ){ $return[$name] = 1; } } } $this->disabled = $return; } }
