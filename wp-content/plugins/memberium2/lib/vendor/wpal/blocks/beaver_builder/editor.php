<?php
/**
 * Copyright (c) 2020 David J Bullock
 * Web Power and Light
*/

 if (! defined( 'ABSPATH' ) ) { die(); }  class wplf6n5ox {  public $builder_slug;  private $controls;  public $to_json = array();  protected $select2_ver = '4.0.6';  protected $ext_ver = '1.0.2';  public $omitted_blocks = array();  function __construct( $builder_slug ) { $this->builder_slug = $builder_slug;  add_filter('wpal/blocks/'.$builder_slug.'/control/config/', array( $this, 'wplvt20'), 10, 1 ); $this->to_json['WPAL_BLOCKS_PREFIX'] = WPAL_BLOCKS_PREFIX; $this->to_json['WPAL_BLOCKS_KEYS_REMOVED_TEXT'] = WPAL_BLOCKS_KEYS_REMOVED_TEXT; $this->to_json['controls'] = wplbd78()->wplo35wqk( $builder_slug ); $this->to_json['tags'] = wplbd78()->wplwmqo( $builder_slug );  $this->omitted_blocks = apply_filters( 'wpal/blocks/'.$builder_slug.'/settings/omitted_blocks', array( 'col', ) ); $this->init(); }  function wplvt20( $config ){ foreach ($config as $c => $control) { $type = $control['type']; switch ($type) { case 'checkbox': $config[$c]['type'] = 'wpal_blocks_toggle'; $config[$c]['description'] = ''; break; case 'SELECT2': $config[$c]['type'] = 'text'; $config[$c]['class'] = 'bb-wpal-blocks-select2'; break; default: break; } } return $config; }  function init() {  add_filter('fl_builder_register_settings_form', array( $this, 'wplbyed'), 9999, 2 );  add_filter('fl_builder_custom_fields', array( $this, 'wplpzr71t') );  add_action('wp_enqueue_scripts', array( $this, 'wplql1fig' ), 9999 ); }  function wplpzr71t( $fields ){ $fields['wpal_blocks_toggle'] = trailingslashit( __DIR__ ) . 'fields/toggle.php'; return $fields; }  function wplbyed( $form, $slug ){  $is_container = ( $slug === 'row' || $slug === 'col' ) ? true : false; if ( $is_container ){ $form['tabs'] = ( isset($form['tabs']) ) ? $form['tabs'] : array(); $form['tabs']['advanced'] = ( isset($form['tabs']['advanced']) ) ? $form['tabs']['advanced'] : array( 'title' => __( 'Advanced', 'wpal_blocks' ) ); $form['tabs']['advanced']['sections'] = ( isset($form['tabs']['advanced']['sections']) ) ? $form['tabs']['advanced']['sections'] : array();  $form['tabs']['advanced']['sections'] = $this->wplwuzc( $form['tabs']['advanced']['sections'], $slug ); } else {  if ( $slug === 'module_advanced' ){ $form['sections'] = ( isset($form['sections']) ) ? $form['sections'] : array(); $form['sections'] = $this->wplwuzc( $form['sections'], $slug ); } } return $form; }  function wplwuzc( $sections, $slug ){ $return_array = array(); $key = 'visibility'; if ( array_key_exists ($key, $sections) ) { foreach ($sections as $s => $section) { $return_array[$s] = $section; if ($s === $key) { $fields = $this->wplkih0z( $slug ); if ( $fields ){ $return_array['wpal-blocks'] = $fields; } } } } else { $return_array = $sections; $fields = $this->wplkih0z( $slug ); if ( $fields ){ $return_array['wpal-blocks'] = $fields; } } return $return_array; }  function wplkih0z( $slug ){  $controls = $this->wpldwor1( $this->to_json['controls'], $slug ); if ( !$controls || empty($controls) ){ return; } $return = array( 'title' => WPAL_BLOCKS_SETTINGS_TITLE, 'fields' => array () ); foreach ( $controls as $c => $control ) { $type = ( isset( $control['type'] ) ) ? $control['type'] : false; $name = ( isset( $control['name'] ) ) ? $control['name'] : false; if ( $type && $name ){ $control_args = array( 'type' => $type, 'label' => $control['label'] ); $conditional_settings = array( 'default', 'description', 'help', 'class', 'options', 'multi-select', 'rows', 'placeholder' ); foreach ($conditional_settings as $s => $setting) { if ( isset( $control[$setting] ) ){ $control_args[$setting] = $control[$setting]; } } $control_args = apply_filters( 'wpal/blocks/'.$this->builder_slug.'/editor/control/args', $control_args, $name, $type, $slug ); $return['fields'][$name] = $control_args; } } return $return; }  function wplql1fig(){ if ( ! FLBuilderModel::is_builder_active() ) { return; } $handle = 'wpal-blocks-bb'; $file_url = plugin_dir_url( __FILE__ ); wp_register_style( 'select2css_bb', $file_url . '/select2/select2.min.css', false, $this->select2_ver, 'all' ); wp_register_script( 'select2_bb', $file_url . '/select2/select2.full.min.js', array( 'jquery' ), $this->select2_ver, true ); wp_register_script( $handle.'-editor-js', $file_url . '/editor.js', array('jquery', 'select2_bb'), $this->ext_ver, true ); wp_register_style( $handle.'-editor-css', $file_url . '/editor.css', false, $this->ext_ver, 'all' ); wp_enqueue_style( 'select2css_bb' ); wp_enqueue_script( 'select2_bb' ); wp_enqueue_script( $handle.'-editor-js' ); wp_enqueue_style( $handle.'-editor-css' ); wp_localize_script( $handle.'-editor-js', 'wpalbb_params', $this->to_json ); }  function wpldwor1($controls, $slug){ $omitted = ( in_array( $slug, $this->omitted_blocks ) ) ? true : false; return ($omitted) ? false : $controls; } }
