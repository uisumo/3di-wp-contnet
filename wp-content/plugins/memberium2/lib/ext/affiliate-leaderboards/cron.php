<?php
 if ( !defined( 'ABSPATH' ) ) { die(); } return new wplxjcn4g; class wplxjcn4g { private $appname; private $isdk; private $today; private $inf_today; function __construct() { global $i2sdk; $this->today = date( 'Y-m-d' ); $this->in_today_start = date( 'Ymd\T00:00:00' ); $this->in_today_end = date( 'Ymd\T23:59:59' ); $this->isdk = $i2sdk->isdk; $this->appname = wplz8bid::wplm3z9k('appname'); $this->affcore = $GLOBALS['memberium_modules']['affiliate-leaderboards']['core']; add_action('memberium_maintenance12', array( $this, 'wplqxuj' ) ); } function wplmq1ma_() { global $wpdb; $vwplw5rgd3 = $this->appname; $vwplx1ap5_ = 'SELECT `id` FROM `' . MEMBERIUM_DB_AFFILIATES . '` WHERE ( `appname` = %s AND `fieldname` = "AffName" ) AND ( `value` LIKE "!%%" ) OR ( `value` LIKE "(INTERNAL)%%" );'; $vwplx1ap5_ = $wpdb->prepare( $vwplx1ap5_, $vwplw5rgd3 ); $vwpltsywc = $wpdb->get_col( $vwplx1ap5_ ); if ( is_array( $vwpltsywc ) ) { return $vwpltsywc; } return array(); } function wplqxuj() { $vwplv0vzua = $this->affcore->wplxhl7(); foreach( $vwplv0vzua as $vwply17edn => $vwplvkv3 ) { $vwplx_stou = array(); if ( empty( $vwplvkv3['cache'] ) || ( $vwplvkv3['start_date'] <= $this->today && $vwplvkv3['end_date'] >= $this->today ) ) { $vwplv0vzua[$vwply17edn] = $this->wplr8antl( $vwplvkv3 ) ; } } $this->affcore->wply3hw4g( $vwplv0vzua ); } function wplr8antl( $vwplvkv3 ) { $vwplx_stou = array(); if ( $vwplvkv3['type'] == 'leads' ) { $vwplx_stou = $this->wplxwl01_( $vwplvkv3 ); } elseif ( in_array( $vwplvkv3['type'], array( 'dollars', 'invoices' ) ) ) { $vwplx_stou = $this->wplfdxyc( $vwplvkv3 ); } $vwplvkv3['cache'] = $vwplx_stou; $vwplvkv3['last_updated'] = time(); return $vwplvkv3; } function wplxwl01_( $vwplvkv3 ) { $vwplh9_pz = $this->wplmq1ma_();  $vwplvphq = date( 'Ymd\T23:59:59', strtotime( $vwplvkv3['end_date'] ) ); $vwplx_stou = array(); $vwplnzlj0t = 'Referral'; $vwplanieul = 1000; $vwplho_n = 0; $vwplw5rgd3 = $this->appname; $vwplc0g3p = array( 'AffiliateId', 'ContactId', 'DateSet', ); $vwplv80sz = array( 'DateSet' => '~>=~ ' . $vwplvkv3['start_date'], ); do { $vwply4j8x = $this->isdk->dsQueryOrderBy( $vwplnzlj0t, $vwplanieul, $vwplho_n, $vwplv80sz, $vwplc0g3p, 'DateSet', true ); foreach( $vwply4j8x as $vwplheakg ) { if ( $vwplheakg['DateSet'] <= $vwplvphq ) { if ( ! in_array( $vwplheakg['AffiliateId'], $vwplh9_pz ) ) { $vwplx_stou[$vwplheakg['AffiliateId']]++; } } } $vwplho_n++; $vwple7lbh = $vwple7lbh + count( $vwply4j8x ); } while ( count( $vwply4j8x ) == $vwplanieul ); arsort( $vwplx_stou ); unset( $vwplx_stou[0] ); $vwplx_stou = array_slice( $vwplx_stou, 0, $vwplvkv3['slots'], true ); return $vwplx_stou; } function wplfdxyc( $vwplvkv3 ) { $vwplh9_pz = $this->wplmq1ma_();  $vwplvphq = date( 'Ymd\T23:59:59', strtotime( $vwplvkv3['end_date'] ) ); $vwplx_stou = array(); $vwplolqx = array(); $vwplnzlj0t = 'Invoice'; $vwplanieul = 1000; $vwplho_n = 0; $vwplw5rgd3 = $this->appname; $vwplj_w4s = array_filter( explode( ',', $vwplvkv3['products'] ) ); $vwplc0g3p = array( 'AffiliateId', 'LeadAffiliateId', 'DateCreated', 'InvoiceTotal', 'ProductSold', ); $vwplv80sz = array( 'DateCreated' => '~>=~ ' . date( 'Ymd\This', strtotime( $vwplvkv3['start_date'] ) ), 'PayStatus' => 1, 'RefundStatus' => 0, ); do { $vwply4j8x = $this->isdk->dsQueryOrderBy( $vwplnzlj0t, $vwplanieul, $vwplho_n, $vwplv80sz, $vwplc0g3p, 'DateCreated', true ); foreach( $vwply4j8x as $vwplheakg ) { $vwplg_xkl = (int) $vwplheakg['AffiliateId']; $vwplouh_ = (int) $vwplheakg['LeadAffiliateId']; $vwpl_r5i = array_filter( explode( ',', $vwplheakg['ProductSold'] ) ); $vwplt9si2 = (bool) ( $vwplg_xkl > 0 || $vwplouh_ > 0 ); $vwplt9si2 = $vwplt9si2 && ( $vwplheakg['DateCreated'] < $vwplvphq ); $vwplt9si2 = $vwplt9si2 && ( ! in_array( $vwplg_xkl, $vwplh9_pz ) ); if ( $vwplt9si2 && ! empty( $vwplj_w4s ) ) { $vwpljnc6o2 = array_intersect( $vwplj_w4s, $vwpl_r5i ); $vwplt9si2 = ! empty( $vwpljnc6o2 ); } if ( $vwplt9si2 ) { if ( $vwplvkv3['type'] == 'dollars' ) { $vwplx_stou[$vwplg_xkl] += (double) $vwplheakg['InvoiceTotal']; } elseif ( $vwplvkv3['type'] == 'invoices' ) { $vwplx_stou[$vwplg_xkl]++; } } } $vwplho_n++; $vwple7lbh = $vwple7lbh + count( $vwply4j8x ); } while ( count( $vwply4j8x ) == $vwplanieul ); unset( $vwplx_stou[0], $vwplolqx[0] ); arsort( $vwplx_stou ); $vwplx_stou = array_slice( $vwplx_stou, 0, $vwplvkv3['slots'], true ); return $vwplx_stou; } function wpleqzn4o() { } }
