<?php
/**
 * Copyright (c) 2020-2020 David J Bullock
 * Web Power and Light
 */

 if ( !defined( 'ABSPATH' ) ) { die(); } final class wpl_p4d { function __construct() { add_action('admin_init', array( __CLASS__, 'wplg6u0') ); add_filter('memberium_unenhanced_posts', array(__CLASS__, 'wplsq8fn'), 10, 1); } static function wplg6u0() { self::wpld5aptg(); } static function wplsq8fn($vwplexo_ =array() ) { $vwplexo_[] = 'achievement-type'; $vwplexo_[] = 'nomination'; $vwplexo_[] = 'step'; $vwplexo_[] = 'submission'; $achievements = self::wplotx_r(); $vwplexo_ = array_merge($vwplexo_, $achievements); return $vwplexo_; } static function wplotx_r() { global $wpdb; static $vwpln5nhr = array(); if (empty($vwpln5nhr) ) { $vwplx1ap5_ = "SELECT LOWER(`post_name`) FROM `{$wpdb->posts}` WHERE `post_type` = 'achievement-type' AND `post_status` = 'publish'"; $vwplyg7o = $wpdb->get_col( $vwplx1ap5_, 0 ); $vwpln5nhr = is_array($vwplyg7o) ? $vwplyg7o : $vwpln5nhr; } return $vwpln5nhr; } static function wpld5aptg() { $vwplo43m = wpljwbf2::wplhhef(); $vwpld5pe9 = self::wplotx_r(); if (in_array($vwplo43m, $vwpld5pe9) ) { add_meta_box( 'memberium-gamipress-achievements', 'Memberium for GamiPress', array(__CLASS__, 'wploqdf8x' ), $vwplo43m, 'side' ); } if ($_SERVER['REQUEST_METHOD'] == 'POST' && isset($_POST['post_type']) && in_array($_POST['post_type'], $vwpld5pe9) ) { add_action('save_post', array(__CLASS__, 'wplq3914') ); } } static function wploqdf8x() { global $post; $vwplaygu_c = get_post_meta($post->ID, '_memberium_gamipress_badge_add', true); $vwplaz8iqj = get_post_meta($post->ID, '_memberium_gamipress_tag_add', true); echo '<label for="_memberium_gamipress_badge_add">', _e( "Add Badge if Member has Tag", 'memberium' ), ':</label> '; echo '<input name="_memberium_gamipress_badge_add" class="taglistdropdown" style="width:100%; max-width:100%" value="', ( empty($vwplaygu_c) ? 0 : $vwplaygu_c ), '"><br /><br />'; echo '<label for="_memberium_gamipress_tag_add">', _e( "Add Tag if Member has Badge", 'memberium' ), ':</label> '; echo '<input name="_memberium_gamipress_tag_add" class="taglistdropdown" style="width:100%; max-width:100%" value="', ( empty($vwplaz8iqj) ? 0 : $vwplaz8iqj ), '"><br /><br />'; do_action('memberium/gamipress/achievement_metabox'); } static function wplq3914($vwplcltpy) { if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) { return; } if (! current_user_can('edit_posts', $vwplcltpy) ) { return; } $vwplqzdlu3 = array( '_memberium_gamipress_badge_add', '_memberium_gamipress_tag_add', ); foreach($vwplqzdlu3 as $vwplyq9i7o) { if (isset($_POST[$vwplyq9i7o]) ) { update_post_meta($vwplcltpy, $vwplyq9i7o, (int) $_POST[$vwplyq9i7o]); } } $vwpld5pe9 = self::wplotx_r(); $vwplgitq = array( 'numberposts' => -1, 'order' => 'ASC', 'orderby' => 'ID', 'post_status' => 'publish', 'post_type' => $vwpld5pe9, 'fields' => 'ids', ); $vwplp4pw = get_posts($vwplgitq); $vwplm1ug34 = array(); foreach($vwplp4pw as $vwplopnf) { $vwpltmveju = get_post_meta($vwplopnf, '_memberium_gamipress_badge_add', true); if ($vwpltmveju) { $vwplm1ug34[$vwplopnf] = $vwpltmveju; } } update_option('memberium/gamipress/assign_by_tag', $vwplm1ug34); $vwplm1ug34 = array(); foreach($vwplp4pw as $vwplopnf) { $vwpltmveju = get_post_meta($vwplopnf, '_memberium_gamipress_tag_add', true); if ($vwpltmveju) { $vwplm1ug34[$vwplopnf] = $vwpltmveju; } } update_option('memberium/gamipress/tag_by_badge', $vwplm1ug34);  } }
