<?php
/**
* Copyright (c) 2018-2020 David J Bullock
* Web Power and Light
*/

  if ( !defined( 'ABSPATH' ) ) { die(); } final class wplakxv { function __construct() { add_action('init', array($this, 'wplf5yc6'), 10); } function wplf5yc6() { if ( bp_is_active('friends') ) { } } function wplucarw($user_id) { } static function wpln2o0dr( $contact, $user_id ) { if ( ! function_exists( 'xprofile_set_field_data' ) ) { return; } if ( is_int( $contact ) ) { $contact = wpllbej::wplrande( $contact ); } if ( empty( $contact ) ) { return; } $field_map = get_option( 'memberium_xprofile_map', array() ); if ( empty( $field_map ) ) { return; } $field_types = wpllbej::wplwr_f(); foreach( $field_map as $infusionsoft_field => $field_id ) { if ( $field_id ) { $field_type = isset( $field_types[$infusionsoft_field] ) ? $field_types[$infusionsoft_field] : 15; $value = ! empty( $contact[$infusionsoft_field] ) ? $contact[$infusionsoft_field] : ''; if ( $field_type == 13 || $field_type == 14 ) { if ( ! empty( $value ) ) { $value = date( 'Y-m-d H:i:s', strtotime( $value ) ); } } $result = xprofile_set_field_data( $field_id, $user_id, $value ); if ( MEMBERIUM_DEBUG ) { if ( ! $result ) { } } } } } static function wplwnh7u($user_id, $field_ids, $errors, $old_values, $new_values) { if ( ! class_exists('BP_XProfile_Field') ) { return; } global $wpdb; $field_map = get_option( 'memberium_xprofile_map', array() ); $field_types = wpllbej::wplwr_f(); $sql = "SELECT `meta_key`, `meta_value` FROM {$wpdb->usermeta} WHERE `user_id` = {$user_id} AND `meta_key` LIKE 'memb\_%';"; $oldmetas = $wpdb->get_results( $sql, OBJECT_K ); foreach( $field_map as $infusionsoft_field => $field_id ) { if ( ! empty( $field_id ) ) { $bpfield = new BP_XProfile_Field( $field_id, $user_id ); $bpfield_name = $bpfield->name; $bpfield_value = $bpfield->data->value; $field_type = isset( $field_types[$infusionsoft_field] ) ? $field_types[$infusionsoft_field] : 15; if ( $field_type == 13 || $field_type == 14 ) { if ( ! empty( $bpfield_value ) ) { $bpfield_value = date( 'Y-m-d\TH:i:s', strtotime( $bpfield_value ) ); } } $meta_name = 'memb_' . $infusionsoft_field; if ( ! isset( $oldmetas[$meta_name]->meta_value ) || $oldmetas[$meta_name]->meta_value <> $bpfield_value ) { update_user_meta( $user_id, $meta_name, $bpfield_value ); } } } }  }
