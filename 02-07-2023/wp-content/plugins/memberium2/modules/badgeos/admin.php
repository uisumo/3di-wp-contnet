<?php
/**
 * Copyright (c) 2021-2022 David J Bullock
 * Web Power and Light
 */

 class_exists('m4is_emz57o') || die(); final 
class m4is__hmyq { static 
function m4is_a6x52r() : self { static $m4is_jprj8; return isset( $m4is_jprj8 ) ? $m4is_jprj8 : $m4is_jprj8 = new self; } private 
function __construct() { add_action( 'admin_init', [$this, 'm4is_f2h7'] ); add_filter( 'memberium/modules/active/names', [$this, 'm4is_hj92e'], 10, 1 ); } private 
function m4is_q9reo() { $m4is_ww04z3 = '_memberium_badgeos_badge_add'; $m4is_saqvir = 'memberium/badgeos/assign_by_tag'; $m4is_lau4 = 'memberium/badgeos/tag_by_badge'; $m4is_i_sejv = []; $m4is_w5ky4q = [ 'numberposts' => -1, 'order' => 'ASC', 'orderby' => 'ID', 'post_status' => 'publish', 'post_type' => badgeos_get_achievement_types_slugs(), 'fields' => 'ids', ]; $m4is_ac5j = get_posts( $m4is_w5ky4q ); foreach($m4is_ac5j as $m4is_b40e_m) { $m4is_w9feq2 = get_post_meta( $m4is_b40e_m, $m4is_ww04z3, true ); if ($m4is_w9feq2) { $m4is_i_sejv[$m4is_b40e_m] = $m4is_w9feq2; } } update_option($m4is_saqvir, $m4is_i_sejv); $m4is_i_sejv = []; foreach($m4is_ac5j as $m4is_b40e_m) { $m4is_w9feq2 = get_post_meta( $m4is_b40e_m, $m4is_ww04z3, true ); if ($m4is_w9feq2) { $m4is_i_sejv[$m4is_b40e_m] = $m4is_w9feq2; } } update_option( $m4is_lau4, $m4is_i_sejv ); } 
function m4is_f2h7() { $this->m4is_qchb(); } 
function m4is_lnz4m() { global $wpdb; static $m4is_ib_tl = []; if ( empty( $m4is_ib_tl ) ) { $m4is_ioxk = "SELECT LOWER(`post_name`) FROM `{$wpdb->posts}` WHERE `post_type` = 'achievement-type' AND `post_status` = 'publish'"; $m4is_jr7f6 = $wpdb->get_col( $m4is_ioxk, 0 ); $m4is_ib_tl = is_array($m4is_jr7f6) ? $m4is_jr7f6 : $m4is_ib_tl; } return $m4is_ib_tl; } 
function m4is_hj92e( array $m4is_its6y ) : array { return array_merge( $m4is_its6y, [ 'BadgeOS for Memberium Integration' ] ); } 
function m4is_qchb() { $m4is_dmesa = m4is_zvyj::m4is_a6x52r()->m4is_w5zj(); $m4is_iqru = badgeos_get_achievement_types_slugs();  $m4is_mch4 = apply_filters('memberium/lms/module_post_types', []); if (in_array($m4is_dmesa, $m4is_iqru) ) { add_meta_box( 'memberium-badgeos-achievements', 'BadgeOS for Memberium', [$this, 'm4is_bwq3g2'], $m4is_dmesa, 'side' ); } if (in_array($m4is_dmesa, $m4is_mch4) ) { $m4is_wesgq0 = apply_filters('memberium/lms/name', 'LMS'); add_meta_box( 'memberium-lms-achievements', "BadgeOS for {$m4is_wesgq0}", [$this, 'm4is_fx94ms'], $m4is_dmesa, 'side' ); } if ($_SERVER['REQUEST_METHOD'] == 'POST') { add_action('save_post', [$this, 'm4is_odbocx'], 10, 3); if (isset($_POST['post_type']) && in_array($_POST['post_type'], $m4is_iqru) ) { add_action('save_post', [$this, 'm4is_h_aep3']); } } } 
function m4is_fx94ms() { global $post; $m4is_ap3_ = '_is4wp_learndash_achievement'; $m4is_ti8od = get_post_meta($post->ID, $m4is_ap3_, true); $m4is_ti8od = empty($m4is_ti8od) ? 0 : $m4is_ti8od; $m4is_ib_tl = $this->m4is_h_vrs5(); $m4is_cu9h = get_post_type_object($post->post_type)->labels->singular_name; wp_nonce_field( MEMBERIUM_SKU, "memberium_badgeos_lms_nonce_{$post->ID}"); echo "<label for='{$m4is_ap3_}'>", _e('Add Badge on Completion of ', 'memberium'), "{$m4is_cu9h}:</label> "; echo '<select class="actionset-selector" name="', $m4is_ap3_, '" style="width:100%; max-width:100%">'; echo '<option value="0">(No Achievement)</option>'; if (is_array($m4is_ib_tl)) { foreach ($m4is_ib_tl as $m4is_b40e_m => $m4is_ho0w2) { $m4is_bp1zf3 = ($m4is_ti8od == $m4is_b40e_m) ? ' selected="selected" ' : ''; echo "<option value='{$m4is_b40e_m}' {$m4is_bp1zf3}>{$m4is_ho0w2}</option>"; } } echo '</select>'; echo '<br /><br />'; do_action('memberium/badgeos/achievement_metabox'); } 
function m4is_odbocx(int $m4is__xysg, $m4is_pgsbl, $m4is_g68c) {  if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) { return; }  if (empty($_POST["memberium_badgeos_lms_nonce_{$m4is__xysg}"]) || ! wp_verify_nonce($_POST["memberium_badgeos_lms_nonce_{$m4is__xysg}"], MEMBERIUM_SKU) ) { return; } if (! current_user_can('edit_posts', $m4is__xysg) ) { return; } $m4is_dhrs = [ '_is4wp_learndash_achievement', ]; foreach($m4is_dhrs as $m4is_ap3_) { if (isset($_POST[$m4is_ap3_])) { if (empty($_POST[$m4is_ap3_])) { delete_post_meta($m4is__xysg, $m4is_ap3_); } else { update_post_meta($m4is__xysg, $m4is_ap3_, $_POST[$m4is_ap3_]); } } } } 
function m4is_bwq3g2() { global $post; wp_nonce_field(MEMBERIUM_SKU, "memberium_badgeos_achievement_tag_map_{$post->ID}"); $m4is_v5st = get_post_meta($post->ID, '_memberium_badgeos_badge_add', true); $m4is_jgzp = get_post_meta($post->ID, '_memberium_badgeos_tag_add', true); echo '<label for="_memberium_badgeos_badge_add">', _e( "Add Badge if Member has Tag", 'memberium' ), ':</label> '; echo '<input name="_memberium_badgeos_badge_add" class="taglistdropdown" style="width:100%; max-width:100%" value="', ( empty($m4is_v5st) ? 0 : $m4is_v5st ), '"><br /><br />'; echo '<label for="_memberium_badgeos_tag_add">', _e( "Add Tag if Member has Badge", 'memberium' ), ':</label> '; echo '<input name="_memberium_badgeos_tag_add" class="taglistdropdown" style="width:100%; max-width:100%" value="', ( empty($m4is_jgzp) ? 0 : $m4is_jgzp ), '"><br /><br />'; do_action('memberium/badgeos/achievement_metabox'); } 
function m4is_h_aep3(int $m4is__xysg) {  if (defined('DOING_AUTOSAVE') && DOING_AUTOSAVE) { return; }  if (empty($_POST["memberium_badgeos_achievement_tag_map_{$m4is__xysg}"]) || ! wp_verify_nonce($_POST["memberium_badgeos_achievement_tag_map_{$m4is__xysg}"], MEMBERIUM_SKU) ) { return; } if (! current_user_can('edit_posts', $m4is__xysg) ) { return; } $m4is_dhrs = [ '_memberium_badgeos_badge_add', '_memberium_badgeos_tag_add', ]; foreach($m4is_dhrs as $m4is_ap3_) { if (isset($_POST[$m4is_ap3_])) { $m4is_j0n7 = $_POST[$m4is_ap3_]; if (empty($m4is_j0n7)) { delete_post_meta($m4is__xysg, $m4is_ap3_); } else { update_post_meta($m4is__xysg, $m4is_ap3_, $m4is_j0n7); } } }  $this->m4is_q9reo(); } 
function m4is_h_vrs5() : array { global $wpdb; $m4is_ib_tl = [];  $m4is_ioxk = "SELECT `ID` as `id`, `post_title` as `name` FROM `{$wpdb->posts}` WHERE `post_status` = 'publish' AND `post_type` IN (SELECT `post_name` FROM `{$wpdb->posts}` WHERE `post_type` = 'achievement-type' AND `post_status` = 'publish'); "; $rows = $wpdb->get_results($m4is_ioxk, ARRAY_A); foreach ($rows as $row) { $m4is_ib_tl[$row['id']] = $row['name']; } return $m4is_ib_tl; } }
