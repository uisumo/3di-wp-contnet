<?php
/**
 * Copyright (c) 2018-2022 David J Bullock
 * Web Power and Light
*/

 class_exists('m4is_emz57o') || die();  
class m4is_t1sb23 { public $slug = 'elementor'; public $version = '1.1.0';  public $to_json = [];  public $omitted_blocks = [];  public $ns = '';  public $prefix = '';  public $I18n = '';  public $access_class;  private 
function __construct(){} static 
function m4is_a6x52r() : self { static $m4is_jprj8 = null; if(is_null($m4is_jprj8)){ $m4is_jprj8 = new self; $m4is_jprj8->access_class = m4is_l0uwos::m4is_a6x52r(); $m4is_jprj8->prefix = $m4is_jprj8->access_class::PREFIX; $m4is_jprj8->ns = $m4is_jprj8->access_class::NS; $m4is_jprj8->m4is_gopgz(); } return $m4is_jprj8; } 
function m4is_gopgz() { add_filter("{$this->ns}/{$this->slug}/editor/control/args", [$this, 'm4is_ye_p'], 10, 5 );  $m4is_bkujny = $this->access_class->m4is_lvmd(); $this->I18n = $m4is_bkujny->m4is_vvsj( false, $this->slug ); $this->to_json['WPAL_BLOCKS_PREFIX'] = $this->prefix; $this->to_json['WPAL_BLOCKS_KEYS_REMOVED_TEXT'] = $this->I18n['keys_removed_text']; $this->to_json['controls'] = $m4is_bkujny->m4is_ubq5l($this->slug);  $this->to_json['tags'] = $m4is_bkujny->m4is_ee0h();  $this->omitted_blocks = apply_filters("{$this->ns}/{$this->slug}/settings/omitted_blocks", ['column']); } 
function m4is_j0l4() { $m4is_jrkhw2 = plugin_dir_url(__FILE__); wp_enqueue_style('wpal-blocks-elementor-editor', "{$m4is_jrkhw2}/editor.css", [], $this->version, 'all'); wp_enqueue_script('wpal-blocks-elementor-editor', "{$m4is_jrkhw2}/editor.js", ['jquery'], $this->version, true); wp_localize_script('wpal-blocks-elementor-editor', 'wpale_params', $this->to_json); } 
function m4is_lvycqu( $m4is_ifbz, $m4is_oto2jv ){ if( in_array($m4is_ifbz->get_type(), $this->omitted_blocks) ){ return; } $m4is_jijt = $this->to_json['controls']; if ( ! $m4is_jijt || empty($m4is_jijt) ) { return; }  $m4is_ifbz->start_controls_section( 'wpal-blocks', [ 'label' => $this->I18n['settings_title'], 'tab' => \Elementor\Controls_Manager::TAB_ADVANCED ] ); foreach ( $m4is_jijt as $m4is__wsdob => $m4is_p4_his ) { $m4is_j1vz = isset($m4is_p4_his['type']) ? $this->m4is_kpifs( $m4is_p4_his['type'] ) : false; $m4is_ho0w2 = isset($m4is_p4_his['name']) ? $m4is_p4_his['name'] : false; if ( $m4is_ho0w2 && $m4is_j1vz ){ $m4is_f_nj = [ 'label' => isset($m4is_p4_his['label']) ? $m4is_p4_his['label'] : false, 'type' => $m4is_j1vz ];  $m4is_p_coq = ['default', 'description', 'options', 'label_on', 'label_off', 'return_value', 'multiple', 'rows', 'separator', 'placeholder']; foreach ($m4is_p_coq as $m4is_jv7n => $m4is_qs_o1n) { if ( isset($m4is_p4_his[$m4is_qs_o1n]) ){ $m4is_f_nj[$m4is_qs_o1n] = $m4is_p4_his[$m4is_qs_o1n]; } } $m4is_f_nj = apply_filters( "{$this->ns}/elementor/editor/control/args", $m4is_f_nj, $m4is_ho0w2, $m4is_ifbz, $m4is_oto2jv ); $m4is_ifbz->add_control( $m4is_ho0w2, $m4is_f_nj ); } }  $m4is_ifbz->end_controls_section(); }  
function m4is_kpifs( string $m4is_j1vz = '' ){ $m4is_j1vz = !empty($m4is_j1vz) ? strtolower( $m4is_j1vz ) : $m4is_j1vz; if( $m4is_j1vz === 'checkbox' ){ return \Elementor\Controls_Manager::SWITCHER; } else if( $m4is_j1vz === 'select2' || $m4is_j1vz === 'text' ){ return \Elementor\Controls_Manager::TEXT; } else if( $m4is_j1vz === 'textarea' ){ return \Elementor\Controls_Manager::TEXTAREA; } return false; }  
function m4is_ye_p($m4is_f_nj, $m4is_ho0w2, $m4is_ifbz, $m4is_oto2jv) { if ( $m4is_ho0w2 === "{$this->prefix}_loggedin" ){ $m4is_f_nj['separator'] = 'before'; } if ( $m4is_ho0w2 === "{$this->prefix}_access_tags" ){ $m4is_f_nj['separator'] = 'before'; } if ( $m4is_ho0w2 === "{$this->prefix}_access_tags" || $m4is_ho0w2 === "{$this->prefix}_access_tags2" ){ $m4is_f_nj['label_block'] = true; $m4is_f_nj['default'] = ''; } if ( $m4is_ho0w2 === "{$this->prefix}_invert_results" ){ $m4is_f_nj['separator'] = 'before'; } return $m4is_f_nj; } }
