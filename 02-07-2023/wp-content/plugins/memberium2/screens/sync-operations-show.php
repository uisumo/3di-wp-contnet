<?php
/**
 * Copyright (c) 2017-2022 David J Bullock
 * Web Power and Light, LLC
 * https://webpowerandlight.com
 * support@webpowerandlight.com
 */

 class_exists( 'm4is_emz57o' ) || die(); current_user_can( 'manage_options' ) || wp_die( __( 'You do not have sufficient permissions to access this page.' ) ); m4is_gfv37x::m4is_burleh(); final 
class m4is_gfv37x { private $makepass_scheduled = false; static 
function m4is_burleh() : self { static $m4is_jprj8; return $m4is_jprj8 ? $m4is_jprj8 : $m4is_jprj8 = new self; } private 
function __construct() { $this->m4is_s_9s8(); $this->m4is_qhl2y1(); } private 
function m4is_s_9s8() { if ( $_SERVER['REQUEST_METHOD'] !== 'POST' ) { return; } $m4is_uubx = isset( $_POST['makepass_scan_size'] ) ? (int) $_POST['makepass_scan_size'] : 0; $m4is_h6e0d = isset( $_POST['makepass_scan_tag'] ) ? (int) $_POST['makepass_scan_tag'] : 0; $m4is_mrzd = isset( $_POST['makepass_success_actionset'] ) ? (int) $_POST['makepass_success_actionset'] : 0; $m4is_tz0i = isset( $_POST['makepass_success_tag'] ) ? (int) $_POST['makepass_success_tag'] : 0; memberium_app()->m4is_oqwxk( $m4is_uubx, 'settings', 'makepass_scan_size' ); memberium_app()->m4is_oqwxk( $m4is_h6e0d, 'settings', 'makepass_scan_tag' ); memberium_app()->m4is_oqwxk( $m4is_mrzd, 'settings', 'makepass_success_actionset', ); memberium_app()->m4is_oqwxk( $m4is_tz0i, 'settings', 'makepass_success_tag', ); m4is__95_::m4is_hbfrj('MakePass Scanner Options Updated.' ); } 
function m4is_zlxj() : array { $m4is_lsvyxw = function( $m4is_waxrhu, $m4is_e3k_mi ) { if ( $m4is_waxrhu > time() - 3600 ) { foreach( $m4is_waxrhu as $k2 => $v2 ) { if ( $k2 == 'memberium_scanmakepass' ) { return true; } } } return false; }; $m4is_oy9c = get_option('cron', [] ); return array_filter($m4is_oy9c, $m4is_lsvyxw, ARRAY_FILTER_USE_BOTH ); } 
function m4is_qhl2y1() { $m4is_u_3t = 'm4is__95_'; $m4is_oy9c = $this->m4is_zlxj(); if ( empty( $m4is_oy9c ) ) { echo '<p><strong>Warning:</strong>  The MakePass Scanner process (WP CRON) is not running.  This service will reinstall each hour.</p>'; } $m4is_uubx = memberium_app()->m4is_mmdrl( 'settings', 'makepass_scan_size' ); $m4is_h6e0d = memberium_app()->m4is_mmdrl( 'settings', 'makepass_scan_tag' ); $m4is_mrzd = memberium_app()->m4is_mmdrl( 'settings', 'makepass_success_actionset' ); $m4is_tz0i = memberium_app()->m4is_mmdrl( 'settings', 'makepass_success_tag' ); echo '<h3>Password Generation Scanner</h3>'; echo '<p><strong style="color:red;">This tool is only recommended if you cannot reliably use HTTP POST to create users.</strong></p>'; echo '<p>This tool is slower, and uses a large number of API calls to operate.</p>'; echo '<ul>'; $m4is_u_3t::m4is_e7f6( 'Makepass Start Tag', 'makepass_scan_tag', $m4is_h6e0d, 'taglistdropdown', ['help_id' => 12526] ); $m4is_u_3t::m4is_e7f6( 'Makepass Complete Tag', 'makepass_success_tag', $m4is_tz0i, 'taglistdropdown', ['help_id' => 12526] ); $m4is_u_3t::m4is_e7f6( 'Makepass Complete Actionset', 'makepass_success_actionset', $m4is_mrzd, 'actionsetdropdown', ['help_id' => 12526] ); $m4is_u_3t::m4is_pfr32( 'Contacts Per Scan', 'makepass_scan_size', $m4is_uubx, ['min' => 1, 'max' => 100, 'help_id' => 12526, 'style' => 'text-align:right;width:80px;'] ); if ( $m4is_h6e0d && $m4is_uubx ) { m4is__4htl6::m4is_ttv9e(); } echo '</ul>'; echo '<p><input type="submit" value="Update" class="button-primary"></p>'; } }
