<?php
 class_exists('m4is_emz57o') || die();  final 
class m4is_mkumo { private  $m4is_nq7s = [], $m4is_tvcm = [], $m4is_aicfp = 0, $m4is_adiq = false, $m4is_tjzfa1 = 0, $m4is_tn89 = [], $m4is_ssdxa6 = [], $m4is_qw8dk = '', $m4is_xiu_ = [], $m4is_aaz9 = '', $m4is_pgsbl = [], $m4is_wz40y = 'content', $m4is_e2kyt = 0, $m4is_wtg_l8 = [], $m4is_ncgn = [],  $m4is__xysg = 0; static 
function m4is_burleh( array $m4is_ssdxa6 = [], array $m4is_pgsbl = [] ) : self { static $m4is_jprj8; return $m4is_jprj8 ? $m4is_jprj8 : $m4is_jprj8 = new self( $m4is_ssdxa6, $m4is_pgsbl ); } private 
function __construct( array $m4is_ssdxa6, array $m4is_pgsbl ) { ini_set( 'display_errors', 1 ); $m4is_ssdxa6 = empty( $m4is_ssdxa6 ) ? $_GET : $m4is_ssdxa6; $m4is_pgsbl = empty( $m4is_pgsbl ) ? $_POST : $m4is_pgsbl; $this->m4is_efgr75( $m4is_ssdxa6, $m4is_pgsbl ); $this->m4is_n4csyz(); $this->m4is_l8ydl(); $this->m4is_pp0i(); } 
function __destruct() { $m4is_ig2l = microtime( true ) - $this->m4is_e2kyt; $m4is_fgxy = sprintf( "Completed Get Post HTTP POST.  Processing time: %0.3f seconds\n", $m4is_ig2l ); $this->m4is_xiu_[] = $m4is_fgxy; $this->m4is_xiu_ = array_filter( $this->m4is_xiu_ ); if ( $this->m4is_aaz9 && ! empty( $this->m4is_xiu_ ) ) { m4is_q1amx::m4is_rf68r( $this->m4is_aaz9, implode( "\n", $this->m4is_xiu_ ) ); } if ( $this->m4is_adiq ) { echo $m4is_fgxy; } } private 
function m4is_efgr75( array $m4is_ssdxa6, array $m4is_pgsbl ) { $this->m4is_e2kyt = isset( $_SERVER['REQUEST_TIME_FLOAT'] ) ? $_SERVER['REQUEST_TIME_FLOAT'] : microtime( true ); $this->m4is_ssdxa6 = $m4is_ssdxa6; $this->m4is_pgsbl = $m4is_pgsbl; $this->m4is_tvcm = m4is_f84s3h::m4is_cm6nr( 'Contact', true ); ksort( $this->m4is_pgsbl ); } private 
function m4is_n4csyz() { $this->m4is_nq7s = $this->m4is_pgsbl; $this->m4is_aicfp = isset( $this->m4is_nq7s['Id'] ) ? (int) $this->m4is_nq7s['Id'] : $this->m4is_aicfp; $this->m4is_adiq = isset( $this->m4is_ssdxa6['debug'] ) ? $this->m4is_y06fw( $this->m4is_ssdxa6['debug'], false ) : false; $this->m4is_tjzfa1 = empty( $this->m4is_ssdxa6['delay'] ) ? 0 : (int) $this->m4is_ssdxa6['delay']; $this->m4is_tn89 = empty( $this->m4is_ssdxa6['format'] ) ? [] : array_filter( explode( ',', $this->m4is_ssdxa6['format'] ) ); $this->m4is_qw8dk = empty( $this->m4is_ssdxa6['goal'] ) ? '' : $this->m4is_ssdxa6['goal']; $this->m4is_p2bxz1 = isset( $this->m4is_ssdxa6['overwrite'] ) ? $this->m4is_y06fw( $this->m4is_ssdxa6['overwrite'], false ) : false; $this->m4is__xysg = empty( $this->m4is_ssdxa6['post_id'] ) ? 0 : (int) $this->m4is_ssdxa6['post_id']; $this->m4is_wtg_l8 = empty( $this->m4is_ssdxa6['tagids'] ) ? [] : array_filter( explode( ',', $this->m4is_ssdxa6['tagids'] ) ); $this->m4is_r_2vlj = empty( $this->m4is_ssdxa6['target'] ) ? [] : array_filter( explode( ',', $this->m4is_ssdxa6['target'] ) ); $this->m4is_aaz9 = m4is_q1amx::m4is_u4dk( $this->m4is_aicfp, 'httppost', 'MakePass' );  if ( $this->m4is_adiq ) { echo __LINE__, " - Begin Get Post at ", microtime( true ) ,"\n"; echo __LINE__, " - Debug Mode Enabled\n"; echo __LINE__, " - Contact ID = ", $this->m4is_aicfp, "\n"; echo __LINE__, " - Post ID = ", $this->m4is__xysg, "\n"; echo __LINE__, " - Format = ", implode( ', ', $this->m4is_tn89 ), "\n"; echo __LINE__, " - Overwrite = ", $this->m4is_s2u9da( $this->m4is_p2bxz1 ), "\n"; echo __LINE__, " - Delay = ", $this->m4is_tjzfa1, "\n"; echo __LINE__, " - Goal = ", $this->m4is_qw8dk, "\n"; echo __LINE__, " - Tag IDs = ", implode( ', ', $this->m4is_wtg_l8 ), "\n"; } } private 
function m4is_l8ydl() { $m4is_fzalfr = []; $m4is_rg0su = []; if ( ! $this->m4is_aicfp ) { $m4is_fzalfr[] = 'Error:  Invalid Keap contact ID'; } foreach( $this->m4is_r_2vlj as $m4is_ap3_ => $m4is_sv3h ) { if ( ! in_array( $m4is_sv3h, $this->m4is_tvcm ) ) { $m4is_rg0su[] = 'Error:  Invalid Keap field name: ' . $m4is_sv3h; unset( $this->m4is_r_2vlj[ $m4is_ap3_ ] ); } } if ( empty( $this->m4is_r_2vlj ) ) { $m4is_fzalfr[] = 'Error:  No valid target fields.'; } if ( empty( $this->m4is__xysg ) || get_post_status( $this->m4is__xysg ) !== 'publish' ) { $m4is_fzalfr[] = 'Error:  Invalid Post ID'; } if ( ! empty( $m4is_fzalfr ) ) { if ( $this->m4is_adiq ) { echo implode( "\n", $m4is_fzalfr ), "\n"; printf( "%d - Aborted Get Post at %s\n", __LINE__, microtime( true ) ); } $this->m4is_xiu_ = array_merge( $this->m4is_xiu_, $m4is_fzalfr ); exit; } } private 
function m4is_pp0i() { $m4is_pgsbl = get_post( $this->m4is__xysg, ARRAY_A ); $m4is_amunwi = []; if ($this->m4is_wz40y == 'content' ) { $m4is_amunwi = $m4is_pgsbl['post_content']; } elseif ($this->m4is_wz40y == 'excerpt' ) { $m4is_amunwi = $m4is_pgsbl['post_excerpt']; } $m4is_amunwi = m4is_qipkj::m4is_yof82( do_shortcode( $m4is_amunwi ), implode( ',', $this->m4is_tn89 ) ); foreach( $this->m4is_r_2vlj as $m4is_sv3h ) { $this->m4is_ncgn[ $m4is_sv3h ] = $m4is_amunwi; $this->m4is_nq7s[ $m4is_sv3h ] = $m4is_amunwi; } if ( $m4is_amunwi ) { m4is_zbyh::m4is_pp0i( $this->m4is_aicfp, $this->m4is_ncgn, true );  memberium_app()->m4is_ba7dk( $this->m4is_nq7s ); } } private 
function m4is_zmo96() { if ( ! empty( $this->m4is_wtg_l8 ) ) { memberium_app()->m4is__mkz( $this->m4is_wtg_l8, $this->m4is_aicfp ); if ($m4is_ia_osy) { echo __LINE__, " - Added Tags: ", implode(', ', $this->m4is_wtg_l8 ), "\n"; } $this->m4is_xiu_[] = sprintf('Added Tags ', implode( ', ', $this->m4is_wtg_l8 ) ); } if ( ! empty( $this->m4is_qw8dk ) ) { $m4is_lgnh7 = explode( ':', $this->m4is_qw8dk ); $m4is__i1sg = $m4is_lgnh7[0]; $m4is_qw8dk = $m4is_lgnh7[1]; m4is_f84s3h::m4is_zox_z5( $this->m4is_aicfp, $m4is_qw8dk, $m4is__i1sg ); if ( $this->m4is_adiq ) { printf( "%d - Goal Achieved with %s\n", __LINE__, implode( ', ', $this->m4is_qw8dk ) ); } } if ( $this->m4is_adiq ) { echo __LINE__, " - Updated Contact\n"; echo __LINE__, " - Sleeping: {$this->m4is_tjzfa1} seconds\n"; } memberium_app()->m4is_l41p7r( $this->m4is_aicfp ); memberium_app()->m4is_v64c('send_http_post'); sleep( $this->m4is_tjzfa1 ); } private 
function m4is_s2u9da( $m4is_rhfd ) { return $m4is_rhfd ? 'Yes' : 'No'; } private 
function m4is_y06fw( $m4is_rhfd, bool $m4is_lphf = false ) : bool { $m4is_rhfd = strtolower( substr( trim( $m4is_rhfd ), 0, 1 ) ); return in_array( $m4is_rhfd, [ 'y', 't', '1' ] ) ? true : ( in_array( $m4is_rhfd, [ 'n', 'f', '0' ] ) ? false : $m4is_lphf ); } }
