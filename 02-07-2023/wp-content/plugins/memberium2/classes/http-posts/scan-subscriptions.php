<?php
 class_exists('m4is_emz57o') || die();  final 
class m4is_no_m { private  $m4is_nq7s = [], $m4is_tvcm = [], $m4is_aicfp = 0, $m4is_adiq = false, $m4is_tjzfa1 = 0, $m4is_tn89 = [], $m4is_ssdxa6 = [], $m4is_xiu_ = [], $m4is_aaz9 = '', $m4is_e2kyt = 0, $m4is_ncgn = [],  $m4is_f149 = 0, $m4is__xd0c = '', $m4is_qt36i = 0, $m4is_elqud = '', $m4is_szv1t2 = 0, $m4is_p307 = '', $m4is_mxcm = 0, $m4is_i1kh = [], $m4is_r5my = [], $xyzzy = null; static 
function m4is_burleh( array $m4is_ssdxa6 = [], array $m4is_pgsbl = []) : self { static $m4is_jprj8; return $m4is_jprj8 ? $m4is_jprj8 : $m4is_jprj8 = new self( $m4is_ssdxa6, $m4is_pgsbl ); } private 
function __construct( array $m4is_ssdxa6, array $m4is_pgsbl ) { ini_set( 'display_errors', 1 ); $m4is_ssdxa6 = empty( $m4is_ssdxa6 ) ? $_GET : $m4is_ssdxa6; $m4is_pgsbl = empty( $m4is_pgsbl ) ? $_POST : $m4is_pgsbl; $this->m4is_efgr75( $m4is_ssdxa6, $m4is_pgsbl ); $this->m4is_n4csyz(); $this->m4is_l8ydl(); $this->m4is_kmy3hb(); $this->m4is_ww93o7(); } 
function __destruct() { memberium_app()->m4is_v64c('send_http_post'); $m4is_ig2l = microtime( true ) - $this->m4is_e2kyt; $m4is_fgxy = sprintf( "Completed Scan Subscriptions HTTP POST.  Processing time: %0.3f seconds\n", $m4is_ig2l ); $this->m4is_xiu_[] = $m4is_fgxy; $this->m4is_xiu_ = array_filter( $this->m4is_xiu_ ); if ( $this->m4is_aaz9 && ! empty( $this->m4is_xiu_ ) ) { m4is_q1amx::m4is_rf68r( $this->m4is_aaz9, implode( "\n", $this->m4is_xiu_ ) ); } if ( $this->m4is_adiq ) { echo $m4is_fgxy; } } private 
function m4is_efgr75( array $m4is_ssdxa6, array $m4is_pgsbl ) { $this->m4is_e2kyt = isset( $_SERVER['REQUEST_TIME_FLOAT'] ) ? $_SERVER['REQUEST_TIME_FLOAT'] : microtime( true ); $this->m4is_ssdxa6 = $m4is_ssdxa6; $this->m4is_pgsbl = $m4is_pgsbl; $this->m4is_tvcm = m4is_f84s3h::m4is_cm6nr( 'Contact', true ); $this->m4is_q7m2 = memberium_app()->m4is_re5x( 'appname' ); ksort( $this->m4is_pgsbl ); } private 
function m4is_n4csyz() { $this->m4is_nq7s = $this->m4is_pgsbl; $this->m4is_aicfp = isset( $this->m4is_nq7s['Id'] ) ? (int) $this->m4is_nq7s['Id'] : $this->m4is_aicfp; $this->m4is_adiq = isset( $this->m4is_ssdxa6['debug'] ) ? $this->m4is_y06fw( $this->m4is_ssdxa6['debug'], false ) : false; $this->m4is_f149 = isset( $this->m4is_ssdxa6['aactionset'] ) ? (int) $this->m4is_ssdxa6['aactionset'] : 0; $this->m4is__xd0c = isset( $this->m4is_ssdxa6['agoal'] ) ? trim( $this->m4is_ssdxa6['agoal'] ) : ''; $this->m4is_qt36i = isset( $this->m4is_ssdxa6['atagid'] ) ? (int) $this->m4is_ssdxa6['atagid'] : 0; $this->m4is_szv1t2 = isset( $this->m4is_ssdxa6['iactionset'] ) ? (int) $this->m4is_ssdxa6['iactionset'] : 0; $this->m4is_p307 = isset( $this->m4is_ssdxa6['igoal'] ) ? trim( $this->m4is_ssdxa6['igoal'] ) : ''; $this->m4is_mxcm = isset( $this->m4is_ssdxa6['itagid'] ) ? (int) $this->m4is_ssdxa6['itagid'] : 0; $this->m4is_r5my = isset( $this->m4is_ssdxa6['subscriptionplans']) ? array_filter( explode( ',', $this->m4is_ssdxa6['subscriptionplans'] ) ) : []; $this->m4is_r_2vlj = empty( $this->m4is_ssdxa6['destfield'] ) ? [] : array_filter( explode( ',', $this->m4is_ssdxa6['destfield'] ) ); $this->m4is_aaz9 = m4is_q1amx::m4is_u4dk( $this->m4is_aicfp, 'httppost', 'Scan Subscriptions' ); $this->m4is_xiu_[] = sprintf( 'Subscription Types = ', implode( ',', $this->m4is_r5my ) ); if ( $this->m4is_adiq ) { $m4is_i0ltb = "%s - %s = %s\n"; echo "Begin Scan Subscriptions\n"; printf( $m4is_i0ltb, __LINE__, 'Contact ID', $this->m4is_aicfp ); printf( $m4is_i0ltb, __LINE__, 'Subscription Types', implode( ', ', $this->m4is_r5my ) ); printf( $m4is_i0ltb, __LINE__, 'Active Actionset', $this->m4is_f149 ); printf( $m4is_i0ltb, __LINE__, 'Active Goal', $this->m4is__xd0c ); printf( $m4is_i0ltb, __LINE__, 'Active Tag', $this->m4is_qt36i ); printf( $m4is_i0ltb, __LINE__, 'Inactive Actionset', $this->m4is_szv1t2 ); printf( $m4is_i0ltb, __LINE__, 'Inactive Goal', $this->m4is_p307 ); printf( $m4is_i0ltb, __LINE__, 'Inactive Tag', $this->m4is_mxcm ); } } private 
function m4is_l8ydl() { $m4is_fzalfr = []; $m4is_rg0su = []; if ( ! $this->m4is_aicfp ) { $m4is_fzalfr[] = 'Error:  Invalid Keap contact ID'; } foreach( $this->m4is_r_2vlj as $m4is_ap3_ => $m4is_sv3h ) { if ( ! in_array( $m4is_sv3h, $this->m4is_tvcm ) ) { $m4is_rg0su[] = sprintf( "Warning: %s is not a valid target field.", $m4is_sv3h ); unset( $this->m4is_r_2vlj[$m4is_ap3_] ); } } if ( empty( $this->m4is_r_2vlj ) ) { $m4is_fzalfr[] = "Error: No valid target fields provided."; } if ( ! empty( $m4is_fzalfr ) ) { if ( $this->m4is_adiq ) { echo implode( "\n", array_merge( $m4is_fzalfr, $m4is_rg0su ) ), "\n"; printf( "%d - Finished MakePass at %s\n", __LINE__, microtime( true ) ); } $this->m4is_xiu_ = array_merge( $this->m4is_xiu_, $m4is_fzalfr ); exit; } } private 
function m4is_kmy3hb() { $m4is_hkp7s = [ 'BillingCycle', 'EndDate', 'Frequency', 'Id', 'LastBillDate', 'NextBillDate', 'PaidThruDate', 'StartDate', 'Status', 'SubscriptionPlanId' ]; $m4is_kc1q = [ 'contactId' => $this->m4is_aicfp ]; $this->m4is_i1kh = m4is_f84s3h::m4is_yt5p0l( 'RecurringOrder', 1000, 0, $m4is_kc1q, $m4is_hkp7s ); if ( ! is_array( $this->m4is_i1kh ) ) { $this->m4is_xiu_[] = sprintf( 'Error:  Unable to retrieve recurring orders for contact %d', $this->m4is_aicfp ); } if ( empty( $this->m4is_i1kh ) ) { $this->m4is_xiu_[] = sprintf( 'Notice:  No recurring orders found' ); exit; } } private 
function m4is_ww93o7() { $m4is_ekvmr = [ 'EndDate', 'LastBillDate', 'PaidThruDate', 'StartDate', 'NextBillDate' ];  foreach ( $this->m4is_i1kh as $m4is_jdcg48 ) { if ( $m4is_jdcg48['Status'] == 'Inactive' ) { if ( empty( $this->m4is_r5my ) || in_array( $m4is_jdcg48['SubscriptionPlanId'], $this->m4is_r5my ) ) { if ( $this->m4is_adiq ) { printf( "%d - Found Matching Inactive Subscription ID: %d, Type: %d\n", __LINE__, $m4is_jdcg48['Id'], $m4is_jdcg48['SubscriptionPlanId'] ); } foreach( $m4is_ekvmr as $m4is_sv3h ) { $m4is_jdcg48[ $m4is_sv3h ] = empty( $m4is_jdcg48[ $m4is_sv3h ] ) ? '' : $m4is_jdcg48[ $m4is_sv3h ]; } $this->m4is_elqud = max( $m4is_jdcg48['EndDate'], $m4is_jdcg48['LastBillDate'], $m4is_jdcg48['PaidThruDate'], $m4is_jdcg48['StartDate'], $m4is_jdcg48['NextBillDate'], $this->m4is_elqud ); } } else { if ( $this->m4is_adiq ) { printf( "%d - Found Inactive Non-Matching Subscription ID: %d, Type: %d\n", __LINE__, $m4is_jdcg48['Id'], $m4is_jdcg48['SubscriptionPlanId'] ); } } }  foreach ( $this->m4is_i1kh as $m4is_jdcg48 ) { if ( $m4is_jdcg48['Status'] == 'Active' ) { if ( empty( $this->m4is_r5my ) || in_array( $m4is_jdcg48['SubscriptionPlanId'], $this->m4is_r5my ) ) { $this->m4is_elqud = ''; if ( $this->m4is_adiq ) { printf( "%d - Found Matching Active Subscription ID: %d, Type: %d \n", __LINE__, $m4is_jdcg48['Id'], $m4is_jdcg48['SubscriptionPlanId'] ); } } else { if ( $this->m4is_adiq ) { printf( "%d - Found Active Non-Matching Subscription ID: %d\n", __LINE__, $m4is_jdcg48['Id'], $m4is_jdcg48['SubscriptionPlanId'] ); } } } } foreach( $this->m4is_r_2vlj as $m4is_sv3h ) { $m4is_ncgn[ $m4is_sv3h ] = $this->m4is_elqud; } if ( $this->m4is_adiq ) { printf( "%d - Expiration Date: %s", __LINE__, $this->m4is_elqud ); } m4is_zbyh::m4is_pp0i( $this->m4is_aicfp, $m4is_ncgn ); } private 
function m4is_rz0_b() {  if ( $this->m4is_elqud == '' ) { if ( $this->m4is_qt36i <> 0 ) { memberium_app()->m4is__mkz( [ $this->m4is_qt36i ], $this->m4is_aicfp); if ( $this->m4is_adiq ) { printf( "%d - Add/Remove Tag %d\n", __LINE__, $this->m4is_qt36i ); } } if ( ! empty( $this->m4is_f149 ) ) { $m4is_n_bp6 = m4is_f84s3h::m4is_ot30uq( $this->m4is_aicfp, $this->m4is_f149 ); if ( $this->m4is_adiq ) { printf( "%d - Running Actionset %d\n", __LINE__, $this->m4is_f149 ); echo __LINE__, ' - ', print_r($m4is_n_bp6, true), "\n"; } } if ( ! empty( $this->m4is__xd0c ) ) { m4is_f84s3h::m4is_zox_z5( $this->m4is_aicfp, $this->m4is__xd0c ); if ( $this->m4is_adiq ) { printf( "%d - Achieving Goal %s\n", __LINE__, $this->m4is__xd0c ); } } }  else { if ( $this->m4is_mxcm <> 0 ) { memberium_app()->m4is__mkz( [ $this->m4is_mxcm ], $this->m4is_aicfp); if ( $this->m4is_adiq ) { printf( "%d - Add/Remove Tag %d\n", __LINE__, $this->m4is_mxcm ); } } if ( ! empty( $this->m4is_szv1t2 ) ) { $m4is_n_bp6 = m4is_f84s3h::m4is_ot30uq( $this->m4is_aicfp, $this->m4is_szv1t2 ); if ( $this->m4is_adiq ) { printf( "%d - Running Actionset %d\n", __LINE__, $this->m4is_szv1t2 ); echo __LINE__, ' - ', print_r($m4is_n_bp6, true), "\n"; } } if ( ! empty( $this->m4is_p307 ) ) { m4is_f84s3h::m4is_zox_z5( $this->m4is_aicfp, $this->m4is_p307 ); if ( $this->m4is_adiq ) { printf( "%d - Achieving Goal %s\n", __LINE__, $this->m4is_p307 ); } } } } private 
function m4is_s2u9da( $m4is_rhfd ) { return $m4is_rhfd ? 'Yes' : 'No'; } private 
function m4is_y06fw( $m4is_rhfd, bool $m4is_lphf = false ) : bool { $m4is_rhfd = strtolower( substr( trim( $m4is_rhfd ), 0, 1 ) ); return in_array( $m4is_rhfd, [ 'y', 't', '1' ] ) ? true : ( in_array( $m4is_rhfd, [ 'n', 'f', '0' ] ) ? false : $m4is_lphf ); } }
