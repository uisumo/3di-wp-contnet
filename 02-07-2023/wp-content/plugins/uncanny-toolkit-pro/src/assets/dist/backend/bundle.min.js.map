{"version":3,"file":"backend/bundle.min.js","mappings":"kCAAAA,EAAOC,QAAUC,M,GCCbC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,CCrBAG,EAAoBK,EAAKT,IACxB,IAAIU,EAASV,GAAUA,EAAOW,WAC7B,IAAOX,EAAiB,QACxB,IAAM,EAEP,OADAI,EAAoBQ,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdN,EAAoBQ,EAAI,CAACX,EAASa,KACjC,IAAI,IAAIC,KAAOD,EACXV,EAAoBY,EAAEF,EAAYC,KAASX,EAAoBY,EAAEf,EAASc,IAC5EE,OAAOC,eAAejB,EAASc,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDX,EAAoBY,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,G,kQCa3E,SAASI,IAAyE,IAA/DC,EAA+D,uDAApD,KAAMC,EAA8C,uDAAvC,KAAMC,EAAiC,uDAArB,KAAMC,EAAe,uDAAN,KAE3EC,EAAiB,CAAE,oBAAqB,mBAAoB,oBAAqB,4BAGhFA,EAAeC,SAAUL,GAE1BM,IAAAA,KAAO,CACHC,OAAQ,OACRC,IAAQC,kBAAkBC,QAAUV,EAAW,IAC/CC,KAAQK,IAAAA,MAASL,GAAS,IAAMK,IAAAA,MAAQ,CAAEK,WAAY,IAGtDC,WAAY,SAAUC,GAClBA,EAAIC,iBAAkB,aAAcL,kBAAkBM,MACzD,EAEDC,QAAS,SAAUC,GAEVC,EAAWhB,IAEZA,EAAWe,EAElB,EAEDE,WAAY,CACR,IAAK,WACDC,SAASC,QACZ,GAGLC,KAAM,SAAWL,GACRC,EAAWf,IACZA,EAAQc,EAEf,IAILM,QAAQC,MAAR,cAAuBxB,EAAvB,6BAEP,CASM,IAAMkB,EAAY,SAAEO,GAEvB,OAAO,MAAOA,CACjB,EAoCYC,EAAW,SAAED,GACtB,MAA2B,WAApB,EAAOA,IAAsC,OAAbA,CAC1C,E,s2BCsMD,QAxSME,WACL,c,4FAAa,SAEZC,KAAKC,cAGAD,KAAKE,sBAETF,KAAKG,gBAGLH,KAAKI,gBAEN,C,gDAED,WAECJ,KAAKK,UAAY,CAChBC,MAAO5B,EAAG,qBAEX,G,2BAED,WAAe,WAGdsB,KAAKK,UAAUC,MAAMC,GAAI,QAAS,mCAAmC,SAAEC,GAEtEA,EAAMC,iBAGN,IAAMC,EAAchC,EAAG8B,EAAMG,eAGvBC,EAAOF,EAAYG,QAAS,MAKlCD,EAAKE,KAAM,iBAAkBC,YAAa,iCAG1C,ID4BsBlB,EACjBR,EC7BC2B,EAAU,CACfC,KAAWL,EAAKE,KAAM,sBACtBI,MAAWN,EAAKE,KAAM,wBACtBK,IAAWP,EAAKE,KAAM,qBACtBM,KAAWR,EAAKE,KAAM,sBACtBO,OAAWT,EAAKE,KAAM,yBAIjBQ,EAAc,CACnBL,KAAWD,EAAQC,KAAKM,MACxBL,MAAWF,EAAQE,MAAMK,MACzBJ,IAAWH,EAAQG,IAAII,MACvBH,KAAWJ,EAAQI,KAAKG,MACxBF,OAAWL,EAAQK,OAAOE,OAIrBlD,EAAO,EAAH,KACN,CACFmD,SAAWZ,EAAKvC,KAAM,SACtBoD,QAAWb,EAAKvC,KAAM,QACtBqD,UAAWd,EAAKvC,KAAM,UAEtBsD,OAAW,SAETL,GAMAM,GAAU,EAGd,IAAM,IAAIC,KAAWP,EAAa,CDN7BjC,YAAW,EAGVC,EAJgBO,ECSPyB,EAAaO,MDFnBxC,EADCQ,EAASiC,QACoB,GAAnBjC,EAASkC,OAEdjC,EAAUD,GACLnC,OAAOsE,KAAMnC,GAAWkC,OAGZ,IAAZlC,IAIZR,GCRmC4C,MAAOC,SAAUZ,EAAaO,QAEvED,GAAU,EAGVZ,EAASa,GAAUM,SAAU,kCAG9B,IAAIC,EAAaF,SAAUlB,EAASa,GAAU,GAAGQ,OAEjD,OAAOR,GACN,IAAK,QACAO,EAAa,MAAQA,EAAa,QAErCR,GAAU,EAGVZ,EAASa,GAAUM,SAAU,kCAE9B,MACD,IAAK,SACe,IAAfC,GAAoBA,EAAa,MAEpCR,GAAU,EAGVZ,EAASa,GAAUM,SAAU,kCAE9B,MACD,IAAK,OACe,IAAfC,GAAoBA,EAAa,MAEpCR,GAAU,EAGVZ,EAASa,GAAUM,SAAU,kCAE9B,MACD,IAAK,OACCC,EAAa,KAEjBR,GAAU,EAGVZ,EAASa,GAAUM,SAAU,kCAE9B,MACD,IAAK,SACCC,EAAa,KAEjBR,GAAU,EAGVZ,EAASa,GAAUM,SAAU,kCAIhC,CAGIP,IAEJhB,EAAKuB,SAAU,iCACfzB,EAAYyB,SAAU,+BAGtBhE,EAAU,mBAAoBE,GAAM,SAAEgB,GAMrC,GAJAuB,EAAKG,YAAa,iCAClBL,EAAYK,YAAa,+BAGpB1B,EAASD,QAAS,CAEtBwB,EAAKuB,SAAU,iCACfxC,QAAQ2C,IAAIjE,GACZ,IAAIkE,EAAOlE,EAAK4C,KAAO,IAAM5C,EAAK6C,MAAQ,IAAM7C,EAAK8C,IAAM,IAAM9C,EAAK+C,KAAO,IAAM/C,EAAKgD,OAAS,MAE7FmB,EAAa,IAAIC,KAAKF,GAAOG,UACjC9B,EAAKvC,KAAK,OAAOmE,GAEjB,EAAKnC,UAAUsC,UAAUC,MAAK,EAC9B,MAGAhC,EAAKuB,SAAU,+BACfU,MAAO,mBAAqBxD,EAAShB,KAAKyE,SAI3CC,YAAW,WAEVnC,EAAKG,YAAa,6DAClBvB,SAASC,QACT,GAAE,IACH,IAAE,SAAEJ,GAEJuB,EAAKuB,SAAU,+BAGfY,YAAW,WAEVnC,EAAKG,YAAa,6DAClBvB,SAASC,QACT,GAAE,IACH,IAEF,IAGDO,KAAKK,UAAUsC,UAAUpC,GAAI,QAAS,qCAAqC,SAAEC,GAE5EA,EAAMC,iBAGN,IAAMuC,EAAgBtE,EAAG8B,EAAMG,eAGzBC,EAAOoC,EAAcnC,QAAS,MAG9BxC,EAAO,CACZmD,SAAUZ,EAAKvC,KAAM,SACrBoD,QAAUb,EAAKvC,KAAM,QACrBqD,UAAUd,EAAKvC,KAAM,UAErBsD,OAAU,UAIXf,EAAKuB,SAAU,iCACfa,EAAcb,SAAU,+BAGxBhE,EAAU,mBAAoBE,GAAM,SAAEgB,GAErCuB,EAAKG,YAAa,iCAClBiC,EAAcjC,YAAa,+BAGtB1B,EAASD,SAEbwB,EAAKuB,SAAU,iCACfvB,EAAKE,KAAK,SAASS,IAAI,IACvBX,EAAKE,KAAK,UAAU/C,KAAK,gBAAiB,GAC1C6C,EAAKvC,KAAK,OAAO,GACjB,EAAKgC,UAAUsC,UAAUC,MAAK,IAI9BhC,EAAKuB,SAAU,+BAIhBY,YAAW,WAEVnC,EAAKG,YAAa,4DAClB,GAAE,IACH,IAAE,SAAE1B,GAEJuB,EAAKuB,SAAU,+BAGfY,YAAW,WAEVnC,EAAKG,YAAa,4DAClB,GAAE,IACH,GACD,GACD,G,2BAED,WAECf,KAAKK,UAAUC,MAAMC,GAAI,WAAW,WACnC0C,eACA,IAEDjD,KAAKK,UAAUsC,UAAY3C,KAAKK,UAAUC,MAAM4C,UAAU,CACzDC,UAAW,CACV,CACCC,WAAW,EACXC,aAAa,GAEd,CACCD,WAAW,EACXC,aAAa,EACbC,UAAW,CAAE,GACbC,QAAS,CAAE,IAEZ,CACCH,WAAW,EACXI,UAAU,EACVC,MAAO,UACPF,QAAS,CAAE,IAEZ,CACCH,WAAW,EACXI,UAAU,GAEX,CACCJ,WAAW,IAGbM,MAAO,CACN,CAAE,EAAG,QAENC,WAAY,CACX,CAAE,GAAI,GAAI,KAAM,GAChB,CAAE,GAAI,GAAI,IAAK9E,kBAAkB+E,KAAKC,OAGxC,G,+BAED,WACC,OAAO7D,KAAKK,UAAUC,MAAMyB,OAAS,CACrC,M,sEArSIhC,G,mLCyEN,QA/EM+D,WACL,c,4FAAa,SAEZ9D,KAAKC,cAGLD,KAAK+D,cAGL/D,KAAKgE,gCAGLhE,KAAKiE,kCAGLjE,KAAKkE,2BACL,C,gDAED,WAEClE,KAAKK,UAAY,CAChB8D,QAA2BzF,EAAG,yBAC9B0F,uBAA2B1F,EAAG,iDAC9B2F,0BAA2B3F,EAAG,8CAC9B4F,gBAA2B5F,EAAG,sCAC9B6F,QAA2B7F,EAAG,wCAE/B,G,yBAED,WAECsB,KAAKK,UAAUkE,QAAQC,SACvB,G,2CAED,WAA+B,WAE9BxE,KAAKK,UAAU+D,uBAAuB7D,GAAI,UAAU,SAAEC,GAEhD,EAAKH,UAAU+D,uBAAuBK,GAAI,YAE9C,EAAKpE,UAAU8D,QAAQhC,SAAU,iCAIjC,EAAK9B,UAAU8D,QAAQpD,YAAa,gCAErC,GACD,G,6CAED,WAAiC,WAEhCf,KAAKK,UAAUgE,0BAA0B9D,GAAI,UAAU,SAAEC,GAEnD,EAAKH,UAAUgE,0BAA0BI,GAAI,YAEjD,EAAKpE,UAAU8D,QAAQhC,SAAU,4CAIjC,EAAK9B,UAAU8D,QAAQpD,YAAa,2CAErC,GACD,G,uCAED,WAA2B,WAE1Bf,KAAKK,UAAUiE,gBAAgB/D,GAAI,UAAU,SAAEC,GAE9C,IAAMkE,EAAgB,EAAKrE,UAAUiE,gBAAgBK,OAAQ,YAAapD,MAG1E,EAAKlB,UAAU8D,QAAQpD,YAAa,uFAGpC,EAAKV,UAAU8D,QAAQhC,SAAvB,4CAAuEuC,GACvE,GACD,M,sEA5EIZ,G,mLCyDN,QAnDMc,WACL,c,4FAAa,SAEZ5E,KAAKC,cAG2C,GAA3CD,KAAKK,UAAUwE,kBAAkB9C,QAErC/B,KAAK8E,YAEN,C,gDAED,WACC9E,KAAKK,UAAY,CAChBwE,kBAAmBnG,EAAG,qCAEvB,G,wBAED,WAECsB,KAAKK,UAAUwE,kBAAkBtE,GAAI,SAAS,SAAEC,GAE/CA,EAAMC,iBAGN,IAAMsE,EAAiBrG,EAAG8B,EAAMG,eAAgBE,QAAS,wCAGzDkE,EAAe5C,SAAU,gDAGzBhE,EAAU,2BAA4B,CACrCwD,OAAQ,iBACN,SAAEtC,GAECA,EAASD,QAEb2F,EAAeC,SAIfD,EAAehE,YAAa,+CAE7B,IAAE,WAEFgE,EAAehE,YAAa,+CAC5B,GACD,GACD,M,sEAhDI6D,G,ygBCyEN,QA7EMK,WACF,c,4FAAc,SAENjF,KAAKkF,cAELlF,KAAKI,eAEZ,C,8CAED,WACI,MAA0C,oBAA/B+E,4BAA8CA,2BAA2BpD,OAAS,CAIhG,G,2BAED,WAEIrD,EAAE0G,UAAUC,OAAM,WACd,GAAK,+BAAgCF,2BAA6B,CAC9D,IAAIG,EAAYH,2BAA2BI,2BACvC,IAAMD,GACN5G,EAAE,0DAA4D4G,EAAY,KAAKvH,KAAK,WAAY,WAEvG,CACJ,IAGDW,EAAE,4CAA4C8G,QAAO,WAGjDhF,MAAMC,iBAGF,2BADW/B,EAAEsB,MAAMuB,OAKvB7C,EAAE,8CAA8C+G,KAC5C,uBAAyBN,2BAA2BO,mBAAqB,YAEhF,IAGDhH,EAAE,6CAA6C8G,QAAO,WAGlDhF,MAAMC,iBAEN,IAAI6E,EAAY5G,EAAEsB,MAAMuB,MAExB,GAAI,2BADW7C,EAAE,4CAA4C6C,MAC7D,CAIA,IAAMlD,E,+VAAO,IACN,CACCmD,SAAU8D,IAIlBnH,EAAS,oBAAqBE,GAAM,SAACgB,GACjCA,EAAWA,EAAShB,KAEpBK,EAAE,8CAA8C+G,KAC5C,oBAAsBN,2BAA2BQ,cAAjD,gCACyBR,2BAA2BS,YAAc,aAGtElH,EAAEmH,KAAKxG,GAAU,SAAUyG,EAAGvE,GAC1B7C,EAAE,8CAA8CqH,OAAO,kBAAoBD,EAAI,KAAOvE,EAAM,YAC/F,GACJ,GAnBA,CAoBJ,GACJ,I,yEA1EC0D,GCMNG,SAASY,iBAAkB,oBAAoB,WAC9C,IAAIjG,EACJ,IAAI+D,EACJ,IAAIc,EACJ,IAAIqB,CACJ,G","sources":["webpack://uncanny-pro-toolkit-release/external var \"jQuery\"","webpack://uncanny-pro-toolkit-release/webpack/bootstrap","webpack://uncanny-pro-toolkit-release/webpack/runtime/compat get default export","webpack://uncanny-pro-toolkit-release/webpack/runtime/define property getters","webpack://uncanny-pro-toolkit-release/webpack/runtime/hasOwnProperty shorthand","webpack://uncanny-pro-toolkit-release/./src/assets/src/common/js/utilities.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/group-drip.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/restrict-page-access.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/try-automator.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/js/ld-drip-notification.js","webpack://uncanny-pro-toolkit-release/./src/assets/src/backend/index.js"],"sourcesContent":["module.exports = jQuery;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import $ from 'jquery';\n\n/**\n * Performs a REST Call\n * \n * @param {string}    endPoint - Endpoint of the REST call\n * @param {object}    data - Data to be sent in the call\n * @param {callback}  [onSuccess] - Function to be invoked if the call is successful\n * @param {callback}  [onFail] - Function to be invoked if the call fails\n * \n * @return null\n */\n\nexport function restCall( endPoint = null, data = null, onSuccess = null, onFail = null ){\n    // Define the valid endpoints\n    let validEndpoints = [ 'course_navigation', 'update_drip_date', 'get_group_courses', 'try-automator-visibility' ];\n\n    // Check if the endPoint parameter is a valid endpoint\n    if ( validEndpoints.includes( endPoint ) ){\n        // Do AJAX\n        $.ajax({\n            method: 'POST',\n            url:    UncannyToolkitPro.restURL + endPoint + '/',\n            data:   $.param( data ) + '&' + $.param({ doing_rest: 1 }),\n\n            // Attach Nonce the the header of the request\n            beforeSend: function( xhr ){\n                xhr.setRequestHeader( 'X-WP-Nonce', UncannyToolkitPro.nonce );\n            },\n\n            success: function( response ){\n                // Check if onSuccess\n                if ( isDefined( onSuccess ) ){\n                    // Invoke callback\n                    onSuccess( response );\n                }\n            },\n\n            statusCode: {\n                403: function(){\n                    location.reload();\n                }\n            },\n\n            fail: function ( response ){\n                if ( isDefined( onFail ) ){\n                    onFail( response );\n                }\n            },\n        });\n    }\n    else {\n        console.error( `The ${ endPoint } endPoint does not exists` );\n    }\n}\n\n/**\n * Determine if a variable is set and is not NULL\n *\n * @param  {mixed}      variable - The variable being evaluated\n * @return {boolean}    TRUE if the variable is defined\n */\n\nexport const isDefined = ( variable ) => {\n\t// Returns true if the variable is undefined\n    return typeof variable !== 'undefined' && variable !== null;\n}\n\n/**\n * Determine whether a variable is empty\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is empty\n */\n\nexport const isEmpty = ( variable ) => {\n    let response = true;\n\n    // Check if the variable is defined, otherwise is empty\n    if ( isDefined( variable ) ){\n        // Check if it's array\n        if ( variable.isArray ){\n            response = variable.length == 0;\n        }\n        else if ( isObject( variable ) ){\n            response = Object.keys( variable ).length;\n        }\n        else {\n            response = variable == '';\n        }\n    }\n\n    return response;\n}\n\n/**\n * Determine whether a variable is an object\n *\n * @param   {mixed}     variable - The variable being evaluated\n * @return  {boolean}   TRUE if the variable is an object\n */\n\nexport const isObject = ( variable ) => {\n    return typeof variable === 'object' && variable !== null;\n}","import {\n\trestCall,\n\tisEmpty,\n\tisDefined\n} from '../../common/js/utilities.js';\n\nclass GroupDrip {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Check if it has the group drip table\n\t\tif ( this.hasGroupDripTable() ){\n\t\t\t// Init DataTables in the table\n\t\t\tthis.addDataTables();\n\n\t\t\t// Listen to clicks on the buttons\n\t\t\tthis.listenActions();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\ttable: $( '#uo-ld-group-drip' )\n\t\t}\n\t}\n\n\tlistenActions(){\n\n\t\t// Listen clicks to the save date button\n\t\tthis.$elements.table.on( 'click', '.uo-ld-group-drip__action--save', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get button\n\t\t\tconst $saveButton = $( event.currentTarget );\n\n\t\t\t// Get row\n\t\t\tconst $row = $saveButton.closest( 'tr' );\n\n\t\t\t// Remove the error class from all the fields\n\t\t\t// This is useful if the fields were invalid\n\t\t\t// but are valid now\n\t\t\t$row.find( 'input, select' ).removeClass( 'ultp-gutenberg-field--invalid' );\n\n\t\t\t// Get fields\n\t\t\tconst $fields = {\n\t\t\t\tyear:      $row.find( 'input[name=\"year\"]' ),\n\t\t\t\tmonth:     $row.find( 'select[name=\"month\"]' ),\n\t\t\t\tday:       $row.find( 'input[name=\"day\"]' ),\n\t\t\t\thour:      $row.find( 'input[name=\"hour\"]' ),\n\t\t\t\tminute:    $row.find( 'input[name=\"minute\"]' ),\n\t\t\t}\n\n\t\t\t// Get fields values\n\t\t\tconst fieldsValue = {\n\t\t\t\tyear:      $fields.year.val(),\n\t\t\t\tmonth:     $fields.month.val(),\n\t\t\t\tday:       $fields.day.val(),\n\t\t\t\thour:      $fields.hour.val(),\n\t\t\t\tminute:    $fields.minute.val(),\n\t\t\t}\n\n\t\t\t// Get data. Merge the fields value\n\t\t\tconst data = {\n\t\t\t\t...{\n\t\t\t\t\tgroup_id:  $row.data( 'group' ),\n\t\t\t\t\tpost_id:   $row.data( 'post' ),\n\t\t\t\t\tcourse_id: $row.data( 'course' ),\n\n\t\t\t\t\taction:    'save',\n\t\t\t\t},\n\t\t\t\t...fieldsValue\n\t\t\t}\n\n\t\t\t// Validate fields. Create the variable to save the\n\t\t\t// result of the validation and set true as the default\n\t\t\t// value\n\t\t\tlet isValid = true;\n\n\t\t\t// Check if the fields are numeric and aren't empty\n\t\t\tfor ( let fieldId in fieldsValue ){\n\t\t\t\t// Check if it's empty or it's not a number\n\t\t\t\tif ( isEmpty( fieldsValue[ fieldId ] ) || isNaN( parseInt( fieldsValue[ fieldId ] ) ) ){\n\t\t\t\t\t// Update validation result\n\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t}\n\n\t\t\t\tlet fieldValue = parseInt( $fields[ fieldId ][0].value );\n\n\t\t\t\tswitch(fieldId) {\n\t\t\t\t\tcase 'year':\n\t\t\t\t\t\tif (fieldValue < 2015 || fieldValue > 2100) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'month':\n\t\t\t\t\t\tif (fieldValue === 0 || fieldValue > 12) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'day':\n\t\t\t\t\t\tif (fieldValue === 0 || fieldValue > 31) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'hour':\n\t\t\t\t\t\tif ( fieldValue > 23) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'minute':\n\t\t\t\t\t\tif ( fieldValue > 59) {\n\t\t\t\t\t\t\t// Update validation result\n\t\t\t\t\t\t\tisValid = false;\n\n\t\t\t\t\t\t\t// Add error class to the field\n\t\t\t\t\t\t\t$fields[ fieldId ].addClass( 'ultp-gutenberg-field--invalid' );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check if it's valid\n\t\t\tif ( isValid ){\n\t\t\t\t// Add loading class to the button and to the row\n\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t\t$saveButton.addClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t// Do REST call\n\t\t\t\trestCall( 'update_drip_date', data, ( response ) => {\n\t\t\t\t\t// Remove loading class from the button and to the row\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t\t\t$saveButton.removeClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t\t// On success\n\t\t\t\t\tif ( response.success ){\n\t\t\t\t\t\t// Add success class\n\t\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--success' );\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\tlet date = data.year + '-' + data.month + '-' + data.day + ' ' + data.hour + ':' + data.minute + ':00';\n\n\t\t\t\t\t\tlet timestamp = (new Date(date)).getTime();\n\t\t\t\t\t\t$row.data('sort',timestamp);\n\n\t\t\t\t\t\tthis.$elements.dataTable.draw(false);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Add error class\n\t\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\t\t\t\t\t\talert( 'Failed to save: ' + response.data.message );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Remove class after three seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t}, ( response ) => {\n\t\t\t\t\t// Add error class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\n\t\t\t\t\t// Remove class after three seconds\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t}, 2000 );\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t// Listen clicks to the remove date button\n\t\tthis.$elements.dataTable.on( 'click', '.uo-ld-group-drip__action--remove', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get button\n\t\t\tconst $removeButton = $( event.currentTarget );\n\n\t\t\t// Get row\n\t\t\tconst $row = $removeButton.closest( 'tr' );\n\n\t\t\t// Get data\n\t\t\tconst data = {\n\t\t\t\tgroup_id: $row.data( 'group' ),\n\t\t\t\tpost_id:  $row.data( 'post' ),\n\t\t\t\tcourse_id:$row.data( 'course' ),\n\n\t\t\t\taction:   'remove'\n\t\t\t}\n\n\t\t\t// Add loading class to the button and to the row\n\t\t\t$row.addClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t$removeButton.addClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t// Do REST call\n\t\t\trestCall( 'update_drip_date', data, ( response ) => {\n\t\t\t\t// Remove loading class from the button and to the row\n\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--loading' );\n\t\t\t\t$removeButton.removeClass( 'ultp-gutenberg-btn--loading' );\n\n\t\t\t\t// On success\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Add success class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--success' );\n\t\t\t\t\t$row.find('input').val('')\n\t\t\t\t\t$row.find('select').prop('selectedIndex', 0);\n\t\t\t\t\t$row.data('sort',0);\n\t\t\t\t\tthis.$elements.dataTable.draw(false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Add error class\n\t\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\t\t\t\t}\n\n\t\t\t\t// Remove class after three seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t}, 3000 );\n\t\t\t}, ( response ) => {\n\t\t\t\t// Add error class\n\t\t\t\t$row.addClass( 'uo-ld-group-drip-row--error' );\n\n\t\t\t\t// Remove class after three seconds\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t// Remove success and error classes\n\t\t\t\t\t$row.removeClass( 'uo-ld-group-drip-row--success uo-ld-group-drip-row--error' );\n\t\t\t\t}, 3000 );\n\t\t\t});\n\t\t});\n\t}\n\n\taddDataTables(){\n\t\t// Init DataTables\n\t\tthis.$elements.table.on( 'init.dt', function () {\n\t\t\tuoAddSwitcher();\n\t\t} );\n\n\t\tthis.$elements.dataTable = this.$elements.table.DataTable({\n\t\t\taoColumns: [\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbSearchable: true\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbSearchable: false,\n\t\t\t\t\torderData: [ 2 ],\n\t\t\t\t\ttargets: [ 2 ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: true,\n\t\t\t\t\tbVisible: false,\n\t\t\t\t\tsType: 'numeric',\n\t\t\t\t\ttargets: [ 1 ]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: false,\n\t\t\t\t\tbVisible: false\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tbSortable: false\n\t\t\t\t}\n\t\t\t],\n\t\t\torder: [\n\t\t\t\t[ 1, 'asc' ]\n\t\t\t],\n\t\t\tlengthMenu: [\n\t\t\t\t[ 25, 50, 100, -1 ],\n\t\t\t\t[ 25, 50, 100, UncannyToolkitPro.i18n.all ]\n\t\t\t]\n\t\t});\n\t}\n\n\thasGroupDripTable(){\n\t\treturn this.$elements.table.length > 0;\n\t}\n}\n\nexport default GroupDrip;","class RestrictPageAccess {\n\tconstructor(){\n\t\t// Get elements\n\t\tthis.getElements();\n\n\t\t// Add select2 to dropdowns\n\t\tthis.initSelect2();\n\n\t\t// Listen changes to the \"Enable restrict access\" checkbox\n\t\tthis.listenChangesToEnableCheckbox();\n\n\t\t// Listen changes to the \"Redirect\" checkbox\n\t\tthis.listenChangesToRedirectCheckbox();\n\n\t\t// Listen changes to the \"Redirect to\" radios\n\t\tthis.listenChangesToRedirectTo();\n\t}\n\n\tgetElements(){\n\t\t// Get elements\n\t\tthis.$elements = {\n\t\t\tmetabox:                   $( '#ultp-restrict-access' ),\n\t\t\trestrictAccessCheckbox:    $( '#ultp-restrict-access__enable-restrict-access' ),\n\t\t\tredirectIfDefinedCheckbox: $( '#ultp-restrict-access__redirect-if-defined' ),\n\t\t\tredirectToRadio:           $( '.ultp-restrict-access__redirect-to' ),\n\t\t\tselects:                   $( '.ultp-restrict-access__option select' ),\n\t\t}\n\t}\n\n\tinitSelect2(){\n\t\t// Add select2 pillboxes to multi selects\n\t\tthis.$elements.selects.select2();\n\t}\n\n\tlistenChangesToEnableCheckbox(){\n\t\t// Listen if the checkbox changes\n\t\tthis.$elements.restrictAccessCheckbox.on( 'change', ( event ) => {\n\t\t\t// Check if it's checked\n\t\t\tif ( this.$elements.restrictAccessCheckbox.is( ':checked' ) ){\n\t\t\t\t// Add \"enabled\" class\n\t\t\t\tthis.$elements.metabox.addClass( 'ultp-restrict-access--enabled' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove \"enabled\" class\n\t\t\t\tthis.$elements.metabox.removeClass( 'ultp-restrict-access--enabled' );\n\t\t\t}\n\t\t});\n\t}\n\n\tlistenChangesToRedirectCheckbox(){\n\t\t// Listen if the checkbox changes\n\t\tthis.$elements.redirectIfDefinedCheckbox.on( 'change', ( event ) => {\n\t\t\t// Check if it's checked\n\t\t\tif ( this.$elements.redirectIfDefinedCheckbox.is( ':checked' ) ){\n\t\t\t\t// Add \"redirect-if-denied\" class\n\t\t\t\tthis.$elements.metabox.addClass( 'ultp-restrict-access--redirect-if-denied' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Remove \"redirect-if-denied\" class\n\t\t\t\tthis.$elements.metabox.removeClass( 'ultp-restrict-access--redirect-if-denied' );\n\t\t\t}\n\t\t});\n\t}\n\n\tlistenChangesToRedirectTo(){\n\t\t// Listen if the checkbox changes\n\t\tthis.$elements.redirectToRadio.on( 'change', ( event ) => {\n\t\t\t// Get the selected value\n\t\t\tconst selectedValue = this.$elements.redirectToRadio.filter( ':checked' ).val();\n\n\t\t\t// Remove all the classes\n\t\t\tthis.$elements.metabox.removeClass( 'ultp-restrict-access--redirect-to-post ultp-restrict-access--redirect-to-custom_url' );\n\n\t\t\t// Add class to the metabox\n\t\t\tthis.$elements.metabox.addClass( `ultp-restrict-access--redirect-to-${ selectedValue }` );\n\t\t});\n\t}\n}\n\nexport default RestrictPageAccess;\n","import {\n\trestCall,\n\tisEmpty,\n\tisDefined\n} from '../../common/js/utilities.js';\n\nclass TryAutomator {\n\tconstructor(){\n\t\t// Get the elements\n\t\tthis.getElements();\n\n\t\t// Check if the element exists\n\t\tif ( this.$elements.tryAutomatorXIcon.length == 1 ){\n\t\t\t// Listen clicks to it\n\t\t\tthis.handleHide();\n\t\t}\n\t}\n\n\tgetElements(){\n\t\tthis.$elements = {\n\t\t\ttryAutomatorXIcon: $( '#ultp-sidebar-try-automator-close' )\n\t\t}\n\t}\n\n\thandleHide(){\n\t\t// Listen clicks to the \"X\" icon\n\t\tthis.$elements.tryAutomatorXIcon.on( 'click', ( event ) => {\n\t\t\t// Prevent default\n\t\t\tevent.preventDefault();\n\n\t\t\t// Get the row\n\t\t\tconst $itemContainer = $( event.currentTarget ).closest( '.ult-sidebar-featured-item-container' );\n\n\t\t\t// Add loading class to the row\n\t\t\t$itemContainer.addClass( 'ult-sidebar-featured-item-container--loading' );\n\n\t\t\t// Do a call to hide the row\n\t\t\trestCall( 'try-automator-visibility', {\n\t\t\t\taction: 'hide-forever'\n\t\t\t}, ( response ) => {\n\t\t\t\t// Check if the task was successful\n\t\t\t\tif ( response.success ){\n\t\t\t\t\t// Hide the row\n\t\t\t\t\t$itemContainer.remove();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Remove the loading class to the row\n\t\t\t\t\t$itemContainer.removeClass( 'ult-sidebar-featured-item-container--loading' );\n\t\t\t\t}\n\t\t\t}, () => {\n\t\t\t\t// Remove the loading class to the row\n\t\t\t\t$itemContainer.removeClass( 'ult-sidebar-featured-item-container--loading' );\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default TryAutomator;","import {restCall} from \"../../common/js/utilities\";\n\nclass LdDripNotification {\n    constructor() {\n\n        if (this.shouldLoad()) {\n            // Listen to clicks on the buttons\n            this.listenActions();\n        }\n    }\n\n    shouldLoad() {\n        if (typeof UO_LD_Notifications_String !== 'undefined' && UO_LD_Notifications_String.length > 0) {\n            return true;\n        }\n        return false;\n    }\n\n    listenActions() {\n\n        $(document).ready(function () {\n            if ((\"_ld_notifications_group_id\" in UO_LD_Notifications_String)) {\n                let $group_id = UO_LD_Notifications_String._ld_notifications_group_id;\n                if (0 !== $group_id) {\n                    $('select[name=\"_ld_notifications_group_id\"] option[value=' + $group_id + ']').prop('selected', 'selected');\n                }\n            }\n        });\n\n        // Listed Trigger\n        $('select[name=\"_ld_notifications_trigger\"]').change(function () {\n\n            // Prevent default\n            event.preventDefault();\n\n            let $trigger = $(this).val();\n            if ('group_lesson_available' !== $trigger) {\n                return;\n            }\n\n            $('select[name=\"_ld_notifications_course_id\"]').html(\n                '<option value=\"all\">' + UO_LD_Notifications_String.select_group_first + '</option>'\n            );\n        });\n\n        // Listen group ID change select\n        $('select[name=\"_ld_notifications_group_id\"]').change(function () {\n\n            // Prevent default\n            event.preventDefault();\n\n            let $group_id = $(this).val();\n            let $trigger = $('select[name=\"_ld_notifications_trigger\"]').val();\n            if ('group_lesson_available' !== $trigger) {\n                return;\n            }\n\n            const data = {\n                ...{\n                    group_id: $group_id,\n                },\n            }\n\n            restCall('get_group_courses', data, (response) => {\n                response = response.data;\n\n                $('select[name=\"_ld_notifications_course_id\"]').html(\n                    '<option value=\"\">' + UO_LD_Notifications_String.select_course + '</option>' +\n                    '<option value=\"all\">' + UO_LD_Notifications_String.all_courses + '</option>'\n                );\n\n                $.each(response, function (i, val) {\n                    $('select[name=\"_ld_notifications_course_id\"]').append('<option value=\"' + i + '\">' + val + '</option>');\n                });\n            });\n        });\n    }\n}\n\nexport default LdDripNotification;","import './scss/main.scss';\n\nimport GroupDrip from './js/group-drip.js';\nimport RestrictPageAccess from './js/restrict-page-access.js';\nimport TryAutomator from './js/try-automator.js';\nimport LdGroupNotification from './js/ld-drip-notification.js';\n\n// Do on DOM ready\ndocument.addEventListener( 'DOMContentLoaded', () => {\n\tnew GroupDrip();\n\tnew RestrictPageAccess();\n\tnew TryAutomator();\n\tnew LdGroupNotification();\n});"],"names":["module","exports","jQuery","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","restCall","endPoint","data","onSuccess","onFail","validEndpoints","includes","$","method","url","UncannyToolkitPro","restURL","doing_rest","beforeSend","xhr","setRequestHeader","nonce","success","response","isDefined","statusCode","location","reload","fail","console","error","variable","isObject","GroupDrip","this","getElements","hasGroupDripTable","addDataTables","listenActions","$elements","table","on","event","preventDefault","$saveButton","currentTarget","$row","closest","find","removeClass","$fields","year","month","day","hour","minute","fieldsValue","val","group_id","post_id","course_id","action","isValid","fieldId","isArray","length","keys","isNaN","parseInt","addClass","fieldValue","value","log","date","timestamp","Date","getTime","dataTable","draw","alert","message","setTimeout","$removeButton","uoAddSwitcher","DataTable","aoColumns","bSortable","bSearchable","orderData","targets","bVisible","sType","order","lengthMenu","i18n","all","RestrictPageAccess","initSelect2","listenChangesToEnableCheckbox","listenChangesToRedirectCheckbox","listenChangesToRedirectTo","metabox","restrictAccessCheckbox","redirectIfDefinedCheckbox","redirectToRadio","selects","select2","is","selectedValue","filter","TryAutomator","tryAutomatorXIcon","handleHide","$itemContainer","remove","LdDripNotification","shouldLoad","UO_LD_Notifications_String","document","ready","$group_id","_ld_notifications_group_id","change","html","select_group_first","select_course","all_courses","each","i","append","addEventListener","LdGroupNotification"],"sourceRoot":""}